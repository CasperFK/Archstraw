var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/ApiController.html",[0,1.008,1,2.343]],["body/controllers/ApiController.html",[0,1.459,1,4.047,2,1.872,3,0.278,4,0.238,5,0.238,6,4.266,7,3.093,8,3.766,9,0.278,10,0.023,11,0.406,12,2.845,13,0.278,14,0.451,15,0.017,16,0.02,17,0.017]],["title/modules/ApiModule.html",[18,0.836,19,2.136]],["body/modules/ApiModule.html",[1,3.686,2,1.796,3,0.197,4,0.169,5,0.169,9,0.348,10,0.024,11,0.288,13,0.197,14,0.32,15,0.012,16,0.016,17,0.012,18,1.315,19,4.196,20,1.329,21,1.329,22,1.513,23,1.513,24,1.329,25,2.045,26,2.045,27,3.029,28,3.029,29,3.564,30,3.875,31,3.875,32,3.875,33,2.045,34,1.513,35,1.513,36,3.569,37,2.188,38,3.029,39,3.569,40,3.569,41,3.569,42,3.569]],["title/controllers/AppController.html",[0,1.008,43,2.343]],["body/controllers/AppController.html",[0,1.592,2,1.619,3,0.24,4,0.206,5,0.206,9,0.303,10,0.024,11,0.351,13,0.24,14,0.39,15,0.015,16,0.019,17,0.015,43,3.702,44,3.689,45,0.753,46,1.918,47,5.358,48,2.933,49,1.52,50,4.347,51,1.52,52,1.407,53,2.115,54,3.257,55,2.276,56,3.402,57,3.689,58,2.115,59,4.347,60,1.115,61,4.347]],["title/modules/AppModule.html",[18,0.836,62,2.343]],["body/modules/AppModule.html",[2,1.77,3,0.193,4,0.165,5,0.165,9,0.335,10,0.024,11,0.282,13,0.193,14,0.313,15,0.012,16,0.016,17,0.012,18,1.301,19,3.851,20,1.301,21,1.301,22,1.482,23,1.482,24,1.301,25,2.291,26,1.482,33,2.016,34,1.482,35,1.482,37,2.156,43,3.646,56,3.542,57,2.965,62,4.397,63,2.965,64,3.494,65,2.965,66,3.494,67,3.494,68,3.494,69,2.358,70,1.829,71,3.494,72,3.494,73,3.494,74,4.753,75,3.851,76,4.753,77,4.753,78,4.753,79,2.965,80,3.494,81,3.494,82,2.965]],["title/injectables/AppService.html",[56,1.965,83,0.483]],["body/injectables/AppService.html",[3,0.256,4,0.219,5,0.219,9,0.256,10,0.024,11,0.374,13,0.256,14,0.415,15,0.016,16,0.019,17,0.016,45,0.802,46,1.995,47,5.48,49,1.619,51,1.619,52,1.463,56,3.229,60,1.187,83,0.794,84,1.619,85,3.929,86,4.629,87,4.629,88,4.629]],["title/modules/AuthModule.html",[18,0.836,29,1.965]],["body/modules/AuthModule.html",[3,0.179,4,0.153,5,0.153,9,0.347,10,0.024,11,0.262,13,0.179,14,0.291,15,0.011,16,0.015,17,0.011,18,1.251,20,1.208,21,1.208,22,1.375,23,1.375,24,1.208,25,2.203,26,2.203,29,3.874,33,1.915,34,1.375,35,1.375,37,2.049,89,2.753,90,2.753,91,2.753,92,2.753,93,3.462,94,3.203,95,2.976,96,3.514,97,3.764,98,3.243,99,1.698,100,2.189,101,4.516,102,1.836,103,3.243,104,2.365,105,1.232,106,3.048,107,1.915]],["title/injectables/AuthService.html",[83,0.483,96,1.818]],["body/injectables/AuthService.html",[3,0.186,4,0.159,5,0.159,9,0.293,10,0.024,11,0.271,13,0.186,14,0.302,15,0.011,16,0.016,17,0.011,45,0.583,46,1.62,49,1.852,51,1.62,52,1.586,58,1.637,60,1.188,83,0.644,84,1.176,96,2.425,99,1.762,104,1.762,105,0.918,108,2.855,109,1.91,110,3.47,111,3.931,112,1.427,113,2.855,114,2.623,115,2.875,116,3.364,117,2.104,118,1.276,119,1.197,120,1.74,121,3.931,122,3.364,123,2.622,124,4.632,125,4.844,126,3.364,127,2.855,128,1.62,129,2.07,130,1.637,131,1.105,132,1.176,133,3.364,134,3.364,135,3.364]],["title/injectables/JwtAuthGuard.html",[83,0.483,136,1.575]],["body/injectables/JwtAuthGuard.html",[3,0.267,4,0.229,5,0.229,9,0.324,10,0.024,11,0.39,13,0.267,14,0.433,15,0.016,16,0.02,17,0.016,83,0.815,84,1.689,102,2.734,105,1.318,136,2.657,137,2.192,138,3.62,139,4.101,140,2.351,141,4.831]],["title/modules/JwtAuthModule.html",[18,0.836,93,1.965]],["body/modules/JwtAuthModule.html",[3,0.174,4,0.149,5,0.149,9,0.344,10,0.024,11,0.254,13,0.174,14,0.283,15,0.011,16,0.015,17,0.011,18,1.232,20,1.174,21,1.174,22,1.336,23,1.336,24,1.174,25,2.17,26,2.17,33,1.877,34,1.336,35,1.336,37,2.008,93,3.835,94,3.174,95,2.949,99,1.65,100,2.127,104,2.318,105,1.208,106,2.127,107,1.877,115,3.029,137,1.43,142,2.675,143,3.151,144,2.675,145,2.675,146,3.779,147,2.675,148,2.675,149,1.784,150,1.939,151,2.361,152,3.151,153,2.675,154,2.361,155,2.675,156,3.151,157,3.151,158,3.151]],["title/injectables/JwtAuthService.html",[83,0.483,115,1.575]],["body/injectables/JwtAuthService.html",[3,0.14,4,0.12,5,0.12,9,0.277,10,0.024,11,0.204,13,0.14,14,0.227,15,0.013,16,0.013,17,0.009,45,0.438,46,1.319,49,1.75,51,1.578,60,1.373,75,2.322,83,0.525,84,0.884,99,1.324,104,1.324,105,1.533,107,1.6,109,1.394,110,2.827,111,3.202,112,1.6,113,2.146,114,2.382,115,1.712,117,1.988,118,1.205,119,0.853,120,1.644,121,3.202,123,2.833,125,4.248,129,1.556,130,2.196,131,1.483,132,0.884,137,2.43,149,1.431,159,1.706,160,4.581,161,3.773,162,4.36,163,2.832,164,2.528,165,3.773,166,2.528,167,2.555,168,2.528,169,3.773,170,2.528,171,2.546,172,2.546,173,3.046,174,2.528,175,2.827,176,2.827,177,1.706,178,2.322,179,3.773,180,2.546,181,2.528,182,2.546,183,1.836,184,3.773,185,2.528,186,2.146,187,2.528,188,2.528,189,2.528,190,2.528,191,1.894]],["title/guards/JwtRefreshAuthGuard.html",[192,2.343,193,2.343]],["body/guards/JwtRefreshAuthGuard.html",[3,0.209,4,0.179,5,0.179,9,0.311,10,0.024,11,0.405,13,0.209,14,0.339,15,0.013,16,0.017,17,0.013,45,0.656,46,1.754,49,1.324,51,1.324,54,2.836,60,1.286,83,0.698,105,1.369,107,2.54,117,1.503,118,0.912,119,0.856,120,1.244,128,1.754,131,1.244,137,2.276,138,2.836,193,3.385,194,3.785,195,6.232,196,3.785,197,5.99,198,3.785,199,5.016,200,5.016,201,5.626,202,3.213,203,3.785,204,3.785,205,3.785,206,3.785,207,3.785]],["title/modules/JwtRefreshAuthModule.html",[18,0.836,94,1.818]],["body/modules/JwtRefreshAuthModule.html",[3,0.182,4,0.156,5,0.156,9,0.355,10,0.024,11,0.266,13,0.182,14,0.296,15,0.011,16,0.015,17,0.011,18,1.262,20,1.228,21,1.228,22,1.398,23,1.398,24,1.228,25,2.223,26,2.223,33,1.937,34,1.398,35,1.398,37,1.496,93,1.866,94,3.459,99,2.392,104,2.963,105,1.43,106,2.225,107,2.223,114,1.398,115,1.496,129,2.029,137,1.496,146,3.809,147,2.799,148,2.799,149,1.866,150,2.029,151,2.47,153,2.799,154,2.47,163,3.275,208,2.799,209,2.799,210,2.799,211,3.297,212,3.297]],["title/injectables/JwtRefreshAuthService.html",[83,0.483,163,1.689]],["body/injectables/JwtRefreshAuthService.html",[3,0.127,4,0.109,5,0.109,9,0.194,10,0.024,11,0.185,13,0.127,14,0.206,15,0.008,16,0.012,17,0.008,45,0.398,46,1.226,49,1.893,51,1.226,52,1.388,60,0.899,83,0.488,84,0.803,105,1.537,107,2.743,109,1.672,112,1.487,115,1.931,117,1.691,118,1.025,119,1.077,120,1.398,128,1.667,130,2.955,131,1.566,132,1.489,137,2.555,149,1.299,159,1.549,160,4.056,162,4.55,163,1.707,167,3.589,171,2.367,172,2.367,178,1.413,180,1.549,182,1.549,183,2.071,191,1.72,213,1.591,214,3.613,215,3.507,216,2.977,217,2.295,218,3.507,219,2.977,220,4.045,221,2.295,222,2.977,223,2.295,224,2.295,225,2.295,226,1.948,227,1.948,228,2.295,229,1.72,230,0.519,231,1.948,232,1.948,233,4.595,234,1.948,235,1.948,236,1.549,237,2.628,238,2.628,239,1.72,240,2.628,241,1.948,242,3.189,243,2.628,244,1.948,245,1.948,246,1.948,247,1.549,248,1.948,249,1.948,250,1.549,251,1.549,252,1.948]],["title/injectables/JwtStrategy.html",[83,0.483,146,1.965]],["body/injectables/JwtStrategy.html",[3,0.207,4,0.177,5,0.177,9,0.33,10,0.024,11,0.302,13,0.207,14,0.336,15,0.013,16,0.017,17,0.013,45,0.649,46,1.741,49,1.741,51,1.309,60,0.96,83,0.693,84,1.309,102,2.118,104,1.96,109,1.728,112,2.372,117,1.486,118,0.901,119,0.846,120,1.23,137,2.538,140,1.821,146,2.818,150,2.303,151,2.804,155,3.177,167,2.118,178,2.303,180,2.526,182,2.526,253,3.177,254,4.226,255,3.743,256,4.979,257,3.743,258,3.177,259,3.743,260,3.177,261,2.804,262,3.177,263,3.177,264,3.743,265,3.743,266,3.743,267,3.743,268,3.743,269,3.743,270,3.743,271,3.743]],["title/injectables/LocalAuthGuard.html",[83,0.483,272,2.343]],["body/injectables/LocalAuthGuard.html",[3,0.267,4,0.229,5,0.229,9,0.324,10,0.024,11,0.39,13,0.267,14,0.433,15,0.016,16,0.02,17,0.016,83,0.815,84,1.689,102,2.734,139,4.101,140,2.351,272,3.952,273,4.101,274,3.62,275,4.101,276,4.831]],["title/injectables/LocalStrategy.html",[83,0.483,97,2.136]],["body/injectables/LocalStrategy.html",[3,0.188,4,0.161,5,0.161,9,0.317,10,0.024,11,0.274,13,0.188,14,0.305,15,0.011,16,0.016,17,0.011,45,0.589,46,1.631,49,1.631,51,1.188,52,1.591,58,1.654,60,0.871,83,0.649,84,1.188,96,3.249,97,2.871,99,1.78,102,1.923,109,1.645,112,1.441,117,1.852,118,1.123,119,1.054,120,1.532,123,2.64,128,1.631,131,1.532,132,1.188,140,1.654,171,2.293,172,2.293,177,3.868,178,2.091,183,1.654,229,2.546,237,2.546,238,2.546,239,2.546,240,2.546,242,2.546,243,2.546,254,3.959,258,2.884,260,2.884,261,2.546,262,2.884,263,2.884,277,2.884,278,3.398,279,3.398,280,4.664,281,3.398,282,2.884,283,3.398,284,3.398,285,3.398]],["title/interfaces/Payload.html",[167,1.965,230,0.785]],["body/interfaces/Payload.html",[3,0.159,4,0.136,5,0.136,9,0.23,10,0.024,11,0.232,13,0.159,14,0.258,15,0.01,16,0.014,17,0.01,45,0.499,52,1.666,60,1.064,83,0.577,105,0.785,107,2.064,109,1.281,112,1.221,115,1.306,119,1.1,128,1.451,130,2.592,131,1.75,132,1.702,137,1.306,149,1.629,159,1.942,160,3.109,162,4.23,163,1.401,167,3.329,171,2.8,172,2.8,178,3.278,180,3.594,182,3.594,183,2.368,191,2.156,213,1.883,214,2.443,219,2.443,220,3.522,222,2.443,229,2.156,230,0.651,231,2.443,232,2.443,233,4.993,234,2.443,235,2.443,236,1.942,237,3.109,238,3.109,239,2.156,240,3.109,241,2.443,242,3.646,243,3.109,244,2.443,245,2.443,246,2.443,247,1.942,248,2.443,249,2.443,250,1.942,251,1.942,252,2.443,286,1.306]],["title/controllers/SigninController.html",[0,1.008,287,2.343]],["body/controllers/SigninController.html",[0,0.845,2,1.085,3,0.161,4,0.138,5,0.138,7,1.792,9,0.336,10,0.024,11,0.235,13,0.161,14,0.261,15,0.01,16,0.014,17,0.01,45,0.505,46,1.463,48,3.305,49,1.713,51,1.713,53,2.036,54,3.135,55,1.525,60,1.256,96,2.565,99,1.525,105,1.611,107,2.271,109,1.823,110,3.135,112,1.235,114,1.775,117,1.945,118,1.18,120,1.609,129,1.792,130,2.383,132,1.018,136,1.321,163,2.383,192,1.965,193,1.965,216,3.552,272,1.965,274,2.182,287,2.824,288,2.472,289,2.472,290,4.185,291,2.912,292,2.912,293,2.912,294,6.084,295,2.912,296,2.912,297,2.912,298,2.912,299,2.912,300,2.912,301,2.565,302,2.912,303,2.912,304,2.368,305,2.912,306,2.472,307,2.912,308,2.912,309,2.912,310,1.648,311,2.912,312,2.912,313,2.912,314,2.912,315,2.912,316,2.912,317,2.912]],["title/modules/SigninModule.html",[18,0.836,30,2.136]],["body/modules/SigninModule.html",[2,1.783,3,0.195,4,0.167,5,0.167,9,0.347,10,0.024,11,0.285,13,0.195,14,0.317,15,0.012,16,0.016,17,0.012,18,1.308,20,1.315,21,1.315,22,1.497,23,1.497,24,1.315,25,2.303,26,1.497,29,3.553,30,4.189,33,2.03,34,1.497,35,1.497,37,2.172,38,2.997,94,3.287,95,3.054,100,2.383,105,1.306,106,2.383,107,2.03,287,3.666,318,2.997,319,3.531,320,2.997,321,3.863,322,3.531,323,3.531,324,3.531]],["title/injectables/SigninService.html",[83,0.483,321,2.136]],["body/injectables/SigninService.html",[3,0.281,4,0.24,5,0.24,9,0.281,10,0.023,11,0.41,13,0.281,14,0.455,15,0.017,16,0.02,17,0.017,83,0.839,84,1.775,321,3.713,325,4.31]],["title/controllers/SignonController.html",[0,1.008,326,2.343]],["body/controllers/SignonController.html",[0,1.184,2,1.52,3,0.226,4,0.193,5,0.193,7,2.511,9,0.323,10,0.024,11,0.329,13,0.226,14,0.366,15,0.014,16,0.018,17,0.014,53,2.564,60,1.046,109,1.26,112,1.73,114,2.234,123,2.982,128,1.427,129,2.511,130,1.985,131,1.34,132,1.427,289,3.463,301,2.136,306,3.463,326,3.555,327,3.463,328,3.242,329,4.08,330,4.08,331,4.08,332,5.268,333,4.08,334,4.08]],["title/modules/SignonModule.html",[18,0.836,31,2.136]],["body/modules/SignonModule.html",[2,1.873,3,0.21,4,0.18,5,0.18,9,0.355,10,0.024,11,0.307,13,0.21,14,0.341,15,0.013,16,0.017,17,0.013,18,1.358,20,1.415,21,1.415,22,1.611,23,1.611,24,1.415,25,2.39,26,1.611,31,4.086,33,2.133,34,1.611,35,1.611,37,2.282,69,2.564,70,1.99,95,3.12,100,2.564,326,3.804,335,3.225,336,3.8,337,3.225,338,3.946,339,3.8,340,3.8,341,3.8,342,2.564,343,3.225]],["title/injectables/SignonService.html",[83,0.483,338,2.136]],["body/injectables/SignonService.html",[3,0.281,4,0.24,5,0.24,9,0.281,10,0.023,11,0.41,13,0.281,14,0.455,15,0.017,16,0.02,17,0.017,83,0.839,84,1.775,338,3.713,344,4.31]],["title/interfaces/UserModel.html",[230,0.785,328,2.136]],["body/interfaces/UserModel.html",[3,0.23,4,0.197,5,0.197,9,0.23,10,0.023,13,0.23,15,0.014,16,0.018,17,0.014,45,0.722,52,1.789,119,1.405,140,2.598,173,4.194,175,4.656,176,4.656,177,4.194,213,2.422,230,0.942,286,1.89,328,3.286,345,3.535,346,3.976,347,2.181]],["title/modules/UsersModule.html",[18,0.836,95,1.689]],["body/modules/UsersModule.html",[3,0.215,4,0.184,5,0.184,9,0.335,10,0.024,11,0.314,13,0.215,14,0.349,15,0.013,16,0.017,17,0.013,18,1.373,20,1.448,21,1.448,22,1.649,23,1.649,24,1.448,25,2.418,26,2.418,33,2.165,34,1.649,35,1.649,37,1.764,69,2.624,70,2.036,79,3.301,95,3.2,114,2.93,123,2.201,342,3.446,343,3.301,348,3.301,349,3.301,350,3.301,351,3.889,352,3.889,353,3.301,354,3.301]],["title/injectables/UsersService.html",[83,0.483,114,1.472]],["body/injectables/UsersService.html",[3,0.173,4,0.148,5,0.148,9,0.306,10,0.024,11,0.252,13,0.173,14,0.28,15,0.011,16,0.015,17,0.011,45,0.541,46,1.537,49,1.932,51,1.78,52,1.305,60,1.305,70,1.635,83,0.612,84,1.092,109,1.99,112,1.865,114,1.865,117,2.021,118,1.226,119,1.151,120,1.672,123,1.767,127,3.732,128,2.113,130,1.519,131,1.026,173,2.107,183,1.519,328,3.821,347,1.635,355,2.65,356,4.397,357,5.525,358,4.397,359,3.122,360,4.14,361,5.27,362,3.122,363,4.397,364,3.122,365,3.122,366,4.397,367,3.122,368,2.65,369,2.65,370,3.122,371,3.122,372,3.122,373,3.122,374,3.122,375,3.122,376,3.122]],["title/interfaces/WorkDay.html",[230,0.785,377,1.689]],["body/interfaces/WorkDay.html",[0,0.957,3,0.182,4,0.156,5,0.156,9,0.329,10,0.024,11,0.266,12,1.866,13,0.182,14,0.296,15,0.011,16,0.015,17,0.011,45,0.571,52,1.738,53,1.604,55,1.727,58,1.604,60,0.845,105,1.247,109,1.018,118,0.794,119,1.185,128,1.153,131,1.083,132,1.153,136,1.496,213,2.072,230,1.033,286,1.496,301,1.727,304,1.866,310,1.866,377,2.551,378,2.225,379,2.029,380,2.225,381,2.52,382,2.963,383,3.203,384,2.213,385,2.223,386,1.866,387,2.223,388,2.225,389,2.225,390,2.47,391,1.496,392,1.727,393,1.496,394,1.496,395,1.496,396,1.496,397,1.866,398,1.866,399,2.029,400,3.226,401,2.47,402,2.47]],["title/controllers/WorkDayController.html",[0,1.008,398,1.965]],["body/controllers/WorkDayController.html",[0,0.942,2,1.208,3,0.179,4,0.153,5,0.153,7,1.996,8,2.43,9,0.327,10,0.024,11,0.262,12,1.836,13,0.179,14,0.291,15,0.011,16,0.015,17,0.011,45,0.562,46,1.579,48,2.189,49,1.134,51,1.134,52,1.667,53,1.578,55,1.698,58,1.578,60,0.832,105,1.232,109,1.605,117,1.288,118,1.088,119,0.733,120,1.066,128,1.579,131,1.066,132,1.134,136,1.472,230,1.021,301,1.698,304,1.836,310,1.836,377,2.528,378,3.048,379,2.78,380,2.189,381,1.915,382,1.698,383,1.836,384,1.935,385,2.203,386,1.836,387,2.734,388,2.189,389,2.189,390,2.43,391,1.472,392,1.698,393,1.472,394,1.472,395,1.472,396,1.472,397,1.836,398,2.556,399,1.996,400,3.458,401,2.43,402,2.43,403,3.833,404,2.753,405,2.753,406,3.243]],["title/interfaces/WorkDayModel.html",[230,0.785,387,1.689]],["body/interfaces/WorkDayModel.html",[3,0.226,4,0.193,5,0.193,9,0.226,10,0.023,13,0.226,15,0.014,16,0.018,17,0.014,45,0.707,52,1.761,118,0.983,119,1.319,140,2.564,213,2.39,230,1.191,286,1.851,346,3.937,347,2.136,381,2.615,382,3.229,383,3.49,384,2.297,387,2.564,391,1.851,393,1.851,394,1.851,395,1.851,396,1.851,407,3.057,408,3.057]],["title/modules/WorkModule.html",[18,0.836,32,2.136]],["body/modules/WorkModule.html",[2,1.805,3,0.199,4,0.17,5,0.17,9,0.357,10,0.024,11,0.29,13,0.199,14,0.322,15,0.012,16,0.016,17,0.012,18,1.32,20,1.339,21,1.339,22,1.524,23,1.524,24,1.339,25,2.325,26,1.524,32,3.883,33,2.055,34,1.524,35,1.524,37,1.631,69,2.426,70,1.882,82,4.113,118,0.866,353,3.051,354,4.113,377,2.358,379,2.212,385,2.676,386,2.034,398,3.103,400,2.212,409,3.051,410,3.051,411,3.594,412,3.374,413,3.63,414,3.594,415,3.594,416,3.594,417,3.594,418,3.594,419,3.051,420,3.594]],["title/injectables/WorkService.html",[83,0.483,385,1.472]],["body/injectables/WorkService.html",[3,0.133,4,0.114,5,0.114,9,0.29,10,0.024,11,0.194,13,0.133,14,0.216,15,0.008,16,0.012,17,0.008,45,0.417,46,1.271,49,1.833,51,1.707,52,1.124,60,1.344,70,1.26,83,0.506,84,0.841,109,1.955,112,1.542,117,1.939,118,1.176,119,1.104,120,1.604,128,2.061,130,1.769,131,1.936,132,1.928,183,1.769,347,1.26,360,4.289,361,4.859,368,2.042,369,2.042,377,1.769,381,1.02,382,1.26,384,1.632,385,1.542,387,2.786,388,1.624,389,1.624,400,3.005,403,3.086,404,3.086,419,3.086,421,2.042,422,3.086,423,3.086,424,4.883,425,2.406,426,2.406,427,3.414,428,3.635,429,5.242,430,2.406,431,2.406,432,3.635,433,2.406,434,2.406,435,1.803,436,2.406,437,2.406,438,2.406,439,1.803,440,2.406,441,3.928,442,2.406,443,2.406,444,2.406,445,2.406,446,2.406,447,2.406,448,2.406,449,2.406,450,2.406,451,2.406,452,2.406,453,2.406]],["title/interfaces/Worker.html",[230,0.785,384,1.293]],["body/interfaces/Worker.html",[3,0.21,4,0.18,5,0.18,9,0.21,10,0.023,13,0.21,15,0.013,16,0.017,17,0.013,45,0.658,52,1.784,118,1.445,119,1.411,120,2.106,140,1.849,213,2.282,230,1.137,286,1.724,346,3.394,347,1.99,381,1.611,382,1.99,383,2.151,384,2.099,387,1.849,391,2.722,393,2.722,394,2.722,395,2.722,396,2.557,407,2.847,408,2.847]],["title/interfaces/Worker-1.html",[230,0.656,236,1.958,384,1.081]],["body/interfaces/Worker-1.html",[0,0.858,3,0.163,4,0.14,5,0.14,9,0.316,10,0.024,11,0.238,12,1.673,13,0.163,14,0.265,15,0.01,16,0.014,17,0.01,45,0.512,52,1.788,53,1.438,55,1.547,58,1.438,60,0.758,105,1.154,109,0.913,118,1.298,119,1.413,128,1.033,131,0.971,132,1.033,136,1.341,213,1.919,230,0.956,286,1.341,301,1.547,304,1.673,310,1.673,377,2.058,378,1.994,379,1.819,380,1.994,381,2.419,382,1.547,383,1.673,384,2.008,385,2.094,386,1.673,387,2.058,388,1.994,389,1.994,390,2.214,391,2.446,392,2.823,393,2.446,394,2.446,395,2.446,396,2.241,397,3.051,398,1.673,399,1.819,400,3.039,401,2.214,402,2.214]],["title/interfaces/Worker-2.html",[230,0.656,384,1.081,454,2.901]],["body/interfaces/Worker-2.html",[0,0.714,3,0.136,4,0.116,5,0.116,9,0.273,10,0.024,11,0.198,12,1.392,13,0.136,14,0.221,15,0.008,16,0.013,17,0.008,45,0.426,52,1.739,53,1.197,55,1.288,58,1.197,60,1.266,75,1.514,105,1.009,109,1.371,118,1.189,119,1.341,120,2.031,128,1.553,131,1.739,132,1.726,136,1.116,213,1.677,230,0.556,247,1.66,250,1.66,251,2.494,286,1.116,301,2.911,304,1.392,310,2.513,381,2.516,384,1.971,385,1.883,386,1.392,391,2.24,392,2.911,393,2.522,394,2.522,395,2.522,396,2.014,397,3.147,399,2.275,412,1.514,427,3.264,435,1.843,439,2.769,441,2.769,455,1.843,456,3.769,457,2.087,458,2.087,459,2.087,460,2.087,461,2.087,462,2.087,463,2.087,464,2.087,465,2.087]],["title/controllers/WorkerController.html",[0,1.008,412,2.136]],["body/controllers/WorkerController.html",[0,0.723,2,0.927,3,0.138,4,0.118,5,0.118,7,1.532,8,1.866,9,0.275,10,0.024,11,0.201,12,1.409,13,0.138,14,0.223,15,0.008,16,0.013,17,0.008,45,0.432,46,1.304,48,3.019,49,1.564,51,1.564,52,1.485,53,1.212,55,1.304,58,1.212,60,1.274,75,1.532,105,1.018,109,1.881,117,1.482,118,1.077,119,0.843,120,1.226,128,1.953,131,1.748,132,1.737,136,1.13,230,0.563,247,1.68,250,1.68,251,2.517,301,3.119,304,1.409,310,2.532,381,2.256,384,2.08,385,1.897,386,1.409,391,1.13,392,2.342,393,2.029,394,2.029,395,2.029,396,1.13,397,2.532,399,2.296,405,3.166,412,2.296,422,3.166,423,3.166,427,3.447,435,1.866,439,2.795,441,2.795,455,1.866,456,4.741,457,2.114,458,2.114,459,2.114,460,2.114,461,4.217,462,2.114,463,3.166,464,2.114,465,2.114,466,2.49,467,2.49,468,2.49,469,2.49,470,2.49,471,2.49]],["title/interfaces/WorkerModel.html",[230,0.785,427,1.965]],["body/interfaces/WorkerModel.html",[3,0.2,4,0.171,5,0.171,9,0.2,10,0.023,13,0.2,15,0.012,16,0.016,17,0.012,45,0.627,52,1.801,118,1.417,119,1.461,120,2.158,140,2.369,213,2.209,230,0.818,286,1.643,346,3.713,347,1.896,360,2.713,381,2.495,391,2.67,392,3.081,393,2.67,394,2.67,395,2.67,396,2.496,427,2.756,472,3.073]],["title/coverage.html",[473,3.546]],["body/coverage.html",[0,1.586,1,1.585,5,0.111,6,1.994,10,0.024,15,0.008,16,0.012,17,0.008,24,0.875,43,1.585,44,1.994,56,1.33,83,0.876,85,1.994,96,1.23,97,1.446,105,1.416,107,2.317,108,1.994,114,0.996,115,1.066,119,0.531,136,1.066,137,2.478,138,2.675,146,1.33,150,1.446,159,2.914,163,1.143,167,1.33,183,1.143,192,1.585,193,1.585,230,1.323,253,1.994,272,1.585,273,1.994,274,1.76,275,1.994,277,1.994,287,1.585,288,1.994,321,1.446,325,1.994,326,1.585,327,1.994,328,1.446,338,1.446,342,1.585,344,1.994,345,1.994,355,1.994,377,1.737,378,2.914,379,2.658,380,2.914,384,1.608,385,0.996,387,1.143,398,1.33,407,2.675,408,2.675,412,1.446,413,1.76,421,1.994,427,1.33,455,2.675,472,1.994,473,1.76,474,2.349,475,2.349,476,2.349,477,5.932,478,6.372,479,5.463,480,1.994,481,5.463,482,4.318,483,3.57,484,4.823,485,2.349,486,3.57,487,3.57,488,1.994,489,2.349,490,2.349,491,1.994,492,1.994,493,1.994,494,1.994,495,1.994,496,3.03,497,1.994,498,1.994,499,1.994,500,1.994,501,2.349,502,2.349]],["title/dependencies.html",[21,1.555,503,2.901]],["body/dependencies.html",[10,0.024,11,0.359,15,0.015,16,0.019,17,0.015,21,1.655,70,2.327,102,2.515,104,2.327,149,2.515,202,3.772,261,4.549,282,3.772,347,2.327,504,6.071,505,4.443,506,5.562,507,4.443,508,4.443,509,4.443,510,4.443,511,4.443,512,4.443,513,4.443,514,4.443,515,4.443,516,4.443,517,4.443,518,4.443,519,4.443]],["title/miscellaneous/functions.html",[520,1.958,521,3.543]],["body/miscellaneous/functions.html",[10,0.021,15,0.018,16,0.021,17,0.018,24,2.44,45,0.917,488,4.493,520,3.572,521,4.493,522,5.293]],["title/index.html",[45,0.503,523,2.901,524,2.901]],["body/index.html",[4,0.171,10,0.023,15,0.012,16,0.016,17,0.012,473,2.713,525,3.62,526,3.62,527,4.869,528,3.62,529,3.62,530,3.62,531,3.62,532,3.62,533,3.62,534,3.62,535,3.62,536,3.62,537,3.62,538,5.502,539,3.62,540,3.62,541,3.62,542,3.62,543,6.461,544,3.62,545,3.62,546,3.62,547,6.323,548,3.62,549,3.62,550,4.869,551,3.62,552,3.62,553,3.62,554,3.62,555,4.869,556,4.869,557,3.62,558,3.62,559,3.62,560,4.869,561,4.869,562,3.62,563,3.62,564,3.62,565,3.62,566,3.62,567,3.073,568,3.62,569,3.62,570,3.62,571,3.62,572,3.62,573,3.62,574,3.62,575,3.62,576,3.62,577,3.62,578,3.62,579,3.62,580,3.62,581,3.62,582,3.62,583,3.62,584,3.62,585,3.62]],["title/modules.html",[20,1.763]],["body/modules.html",[10,0.019,15,0.015,16,0.019,17,0.015,19,2.711,20,1.64,29,2.493,30,2.711,31,2.711,32,2.711,62,2.972,93,2.493,94,2.306,95,2.143,567,5.861,586,6.906,587,6.906,588,6.906]],["title/overview.html",[589,4.017]],["body/overview.html",[2,0.934,10,0.024,15,0.008,16,0.013,17,0.008,18,0.604,19,3.882,20,0.934,21,0.934,22,1.064,23,1.064,24,0.934,25,1.064,26,1.064,27,2.13,28,2.13,29,3.72,30,3.882,31,3.573,32,3.285,33,1.591,34,1.064,35,1.064,56,2.543,62,3.78,63,2.13,65,2.13,84,0.877,89,2.13,90,2.13,91,2.13,92,2.13,93,3.655,94,3.303,95,2.969,96,3.04,97,2.765,114,2.462,115,2.634,142,2.13,144,2.13,145,2.13,146,3.517,163,2.825,192,1.693,208,2.13,209,2.13,210,2.13,236,1.693,286,1.138,318,2.13,320,2.13,321,2.765,335,2.13,337,2.13,338,2.765,348,2.13,349,2.13,350,2.13,385,1.905,409,2.13,410,2.13,589,2.13,590,2.509,591,2.509,592,2.509,593,2.509]],["title/miscellaneous/variables.html",[520,1.958,594,3.543]],["body/miscellaneous/variables.html",[10,0.024,15,0.006,16,0.01,17,0.006,45,0.317,52,1.712,75,3.579,118,0.886,119,1.538,150,1.809,154,1.372,173,1.236,175,1.372,176,1.372,177,1.236,183,2.244,186,2.494,226,5.759,227,5.297,342,1.983,377,1.43,381,1.561,382,0.959,383,1.037,391,1.333,392,0.959,393,0.831,394,0.831,395,0.831,396,2.687,397,1.037,413,2.202,477,5.028,480,1.554,491,1.554,492,2.494,493,2.494,494,2.494,495,1.554,496,3.575,497,2.494,498,1.554,499,1.554,500,1.554,520,1.236,594,1.554,595,1.831,596,1.831,597,1.831,598,1.831,599,1.831,600,1.831,601,4.923,602,2.939,603,2.939,604,4.612,605,3.68,606,1.831,607,5.692,608,5.692,609,1.831,610,1.831,611,1.831,612,2.939,613,1.831,614,1.831,615,1.831,616,1.831,617,1.831,618,1.831,619,1.831,620,1.831,621,1.831,622,1.831,623,1.831,624,1.831]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":236,"title":{"interfaces/Worker-1.html":{}},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"overview.html":{}}}],["1.0.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":592,"title":{},"body":{"overview.html":{}}}],["2",{"_index":454,"title":{"interfaces/Worker-2.html":{}},"body":{}}],["3.0.0",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":239,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["403",{"_index":245,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["5.9.7",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":591,"title":{},"body":{"overview.html":{}}}],["6.11.11",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["600s",{"_index":158,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["7.0.0",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":593,"title":{},"body":{"overview.html":{}}}],["9",{"_index":590,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":397,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":187,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["addworkertoworkday",{"_index":422,"title":{},"body":{"injectables/WorkService.html":{},"controllers/WorkerController.html":{}}}],["addworkertoworkday(@body",{"_index":464,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["addworkertoworkday(body",{"_index":466,"title":{},"body":{"controllers/WorkerController.html":{}}}],["addworkertoworkday(worker",{"_index":428,"title":{},"body":{"injectables/WorkService.html":{}}}],["admin",{"_index":181,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["amazing",{"_index":568,"title":{},"body":{"index.html":{}}}],["angular",{"_index":536,"title":{},"body":{"index.html":{}}}],["answear",{"_index":237,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["answer",{"_index":441,"title":{},"body":{"injectables/WorkService.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["answer._id",{"_index":443,"title":{},"body":{"injectables/WorkService.html":{}}}],["api",{"_index":8,"title":{},"body":{"controllers/ApiController.html":{},"controllers/WorkDayController.html":{},"controllers/WorkerController.html":{}}}],["api.controller",{"_index":39,"title":{},"body":{"modules/ApiModule.html":{}}}],["api/api.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["api/sign",{"_index":289,"title":{},"body":{"controllers/SigninController.html":{},"controllers/SignonController.html":{}}}],["apicontroller",{"_index":1,"title":{"controllers/ApiController.html":{}},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"coverage.html":{}}}],["apimodule",{"_index":19,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["app",{"_index":545,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":43,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":533,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":56,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["auth",{"_index":274,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"controllers/SigninController.html":{},"coverage.html":{}}}],["auth.guard",{"_index":304,"title":{},"body":{"controllers/SigninController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["auth.guard.ts",{"_index":138,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/JwtRefreshAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:7",{"_index":198,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["auth.module",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{}}}],["auth.module.ts",{"_index":147,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{}}}],["auth.service.ts",{"_index":159,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"coverage.html":{}}}],["auth.service.ts:12",{"_index":228,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["auth.service.ts:13",{"_index":225,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["auth.service.ts:14",{"_index":218,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["auth.service.ts:15",{"_index":170,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth.service.ts:21",{"_index":221,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["auth.service.ts:29",{"_index":223,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["auth.service.ts:32",{"_index":168,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth.service.ts:40",{"_index":166,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth.service.ts:7",{"_index":164,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["auth/auth.module",{"_index":38,"title":{},"body":{"modules/ApiModule.html":{},"modules/SigninModule.html":{}}}],["auth/auth.service",{"_index":303,"title":{},"body":{"controllers/SigninController.html":{}}}],["auth/jwt",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["auth/jwt.strategy",{"_index":211,"title":{},"body":{"modules/JwtRefreshAuthModule.html":{}}}],["auth/jwt.strategy.ts",{"_index":253,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["auth/jwt.strategy.ts:16",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth/jwt.strategy.ts:7",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth/local",{"_index":302,"title":{},"body":{"controllers/SigninController.html":{}}}],["authguard",{"_index":139,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":141,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":276,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":29,"title":{"modules/AuthModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AuthModule.html":{},"modules/SigninModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":578,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":224,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["authorization.split",{"_index":235,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["authservice",{"_index":96,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["backers",{"_index":569,"title":{},"body":{"index.html":{}}}],["body",{"_index":301,"title":{},"body":{"controllers/SigninController.html":{},"controllers/SignonController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["boolean",{"_index":200,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":588,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":586,"title":{},"body":{"modules.html":{}}}],["building",{"_index":528,"title":{},"body":{"index.html":{}}}],["calendarday",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":195,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["canactivate(context",{"_index":196,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["catch",{"_index":250,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["class",{"_index":14,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["cluster",{"_index":390,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{}}}],["cluster_apimodule",{"_index":27,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":28,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_jwtauthmodule",{"_index":142,"title":{},"body":{"modules/JwtAuthModule.html":{},"overview.html":{}}}],["cluster_jwtauthmodule_exports",{"_index":144,"title":{},"body":{"modules/JwtAuthModule.html":{},"overview.html":{}}}],["cluster_jwtauthmodule_imports",{"_index":143,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["cluster_jwtauthmodule_providers",{"_index":145,"title":{},"body":{"modules/JwtAuthModule.html":{},"overview.html":{}}}],["cluster_jwtrefreshauthmodule",{"_index":208,"title":{},"body":{"modules/JwtRefreshAuthModule.html":{},"overview.html":{}}}],["cluster_jwtrefreshauthmodule_exports",{"_index":209,"title":{},"body":{"modules/JwtRefreshAuthModule.html":{},"overview.html":{}}}],["cluster_jwtrefreshauthmodule_providers",{"_index":210,"title":{},"body":{"modules/JwtRefreshAuthModule.html":{},"overview.html":{}}}],["cluster_signinmodule",{"_index":318,"title":{},"body":{"modules/SigninModule.html":{},"overview.html":{}}}],["cluster_signinmodule_imports",{"_index":319,"title":{},"body":{"modules/SigninModule.html":{}}}],["cluster_signinmodule_providers",{"_index":320,"title":{},"body":{"modules/SigninModule.html":{},"overview.html":{}}}],["cluster_signonmodule",{"_index":335,"title":{},"body":{"modules/SignonModule.html":{},"overview.html":{}}}],["cluster_signonmodule_imports",{"_index":336,"title":{},"body":{"modules/SignonModule.html":{}}}],["cluster_signonmodule_providers",{"_index":337,"title":{},"body":{"modules/SignonModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":348,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":349,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":350,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_workmodule",{"_index":409,"title":{},"body":{"modules/WorkModule.html":{},"overview.html":{}}}],["cluster_workmodule_providers",{"_index":410,"title":{},"body":{"modules/WorkModule.html":{},"overview.html":{}}}],["connection",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{},"injectables/WorkService.html":{}}}],["connectionname",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SignonController.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["constants",{"_index":151,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"injectables/UsersService.html":{},"injectables/WorkService.html":{}}}],["constructor(authservice",{"_index":278,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(jwtservice",{"_index":217,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["constructor(private",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["constructor(usermodel",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{}}}],["constructor(workermodel",{"_index":425,"title":{},"body":{"injectables/WorkService.html":{}}}],["context",{"_index":199,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":204,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["contractsales",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiController.html":{},"controllers/AppController.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"controllers/WorkDayController.html":{},"controllers/WorkerController.html":{}},"body":{"controllers/ApiController.html":{},"controllers/AppController.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["controller('/api",{"_index":12,"title":{},"body":{"controllers/ApiController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["controller('/api/sign",{"_index":305,"title":{},"body":{"controllers/SigninController.html":{}}}],["controller('api/sign",{"_index":330,"title":{},"body":{"controllers/SignonController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"controllers/WorkerController.html":{},"overview.html":{}}}],["coverage",{"_index":473,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created",{"_index":334,"title":{},"body":{"controllers/SignonController.html":{}}}],["createduser",{"_index":372,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":374,"title":{},"body":{"injectables/UsersService.html":{}}}],["createrefreshtoken",{"_index":215,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{}}}],["createrefreshtoken(payload",{"_index":219,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["createtoken",{"_index":161,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["createtoken(payload",{"_index":165,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["createuser",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser(user",{"_index":363,"title":{},"body":{"injectables/UsersService.html":{}}}],["createworkday",{"_index":403,"title":{},"body":{"controllers/WorkDayController.html":{},"injectables/WorkService.html":{}}}],["createworkday(@body",{"_index":401,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{}}}],["createworkday(workday",{"_index":404,"title":{},"body":{"controllers/WorkDayController.html":{},"injectables/WorkService.html":{}}}],["createworker",{"_index":423,"title":{},"body":{"injectables/WorkService.html":{},"controllers/WorkerController.html":{}}}],["createworker(@body",{"_index":457,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["createworker(body",{"_index":468,"title":{},"body":{"controllers/WorkerController.html":{}}}],["createworker(worker",{"_index":432,"title":{},"body":{"injectables/WorkService.html":{}}}],["currency",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.schema.ts",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":381,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["date().tostring",{"_index":184,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["date.now",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["day",{"_index":400,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{}}}],["day.controller",{"_index":415,"title":{},"body":{"modules/WorkModule.html":{}}}],["day.controller.ts",{"_index":380,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"coverage.html":{}}}],["day.controller.ts:31",{"_index":406,"title":{},"body":{"controllers/WorkDayController.html":{}}}],["day.model",{"_index":389,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{}}}],["day.model.ts",{"_index":408,"title":{},"body":{"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"coverage.html":{}}}],["day.schema",{"_index":418,"title":{},"body":{"modules/WorkModule.html":{}}}],["day.schema.ts",{"_index":496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["day/work",{"_index":379,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"interfaces/Worker-1.html":{},"coverage.html":{}}}],["daygeneraldata",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["decorators",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/SigninController.html":{},"controllers/WorkDayController.html":{},"controllers/WorkerController.html":{}}}],["default",{"_index":226,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"injectables/UsersService.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"controllers/WorkerController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":537,"title":{},"body":{"index.html":{}}}],["development",{"_index":546,"title":{},"body":{"index.html":{}}}],["document",{"_index":346,"title":{},"body":{"interfaces/UserModel.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/WorkerModel.html":{}}}],["documentation",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["e",{"_index":251,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["e2e",{"_index":557,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":529,"title":{},"body":{"index.html":{}}}],["email",{"_index":173,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/UserModel.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["employee",{"_index":456,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["employees",{"_index":382,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"miscellaneous/variables.html":{}}}],["endwork",{"_index":394,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":171,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["error(e",{"_index":252,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["executioncontext",{"_index":197,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["exist",{"_index":246,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["expiresin",{"_index":157,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["export",{"_index":13,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["express",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":140,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserModel.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/WorkerModel.html":{}}}],["extractjwt",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{}}}],["findall",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(mail",{"_index":366,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":175,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":527,"title":{},"body":{"index.html":{}}}],["function",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":521,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fxmmt.mongodb.net/users?retrywrites=true&w=majority",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["fxmmt.mongodb.net/work?retrywrites=true&w=majority",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["general",{"_index":492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('get",{"_index":460,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["get('profile",{"_index":311,"title":{},"body":{"controllers/SigninController.html":{}}}],["get('token",{"_index":315,"title":{},"body":{"controllers/SigninController.html":{}}}],["getallworkers",{"_index":424,"title":{},"body":{"injectables/WorkService.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":290,"title":{},"body":{"controllers/SigninController.html":{}}}],["getprofile(@request",{"_index":312,"title":{},"body":{"controllers/SigninController.html":{}}}],["getprofile(req",{"_index":291,"title":{},"body":{"controllers/SigninController.html":{}}}],["getrefreshtoken",{"_index":216,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"controllers/SigninController.html":{}}}],["getrefreshtoken(@request",{"_index":316,"title":{},"body":{"controllers/SigninController.html":{}}}],["getrefreshtoken(authorization",{"_index":222,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["getrefreshtoken(req",{"_index":295,"title":{},"body":{"controllers/SigninController.html":{}}}],["getting",{"_index":523,"title":{"index.html":{}},"body":{}}],["getworkers",{"_index":461,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["gross",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grow",{"_index":564,"title":{},"body":{"index.html":{}}}],["guard",{"_index":192,"title":{"guards/JwtRefreshAuthGuard.html":{}},"body":{"controllers/SigninController.html":{},"coverage.html":{},"overview.html":{}}}],["guard.ts",{"_index":275,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":194,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["heavily",{"_index":534,"title":{},"body":{"index.html":{}}}],["hello",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":575,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":582,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":203,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"interfaces/UserModel.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{}}}],["injectable",{"_index":83,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SigninService.html":{},"injectables/SignonService.html":{},"injectables/UsersService.html":{},"injectables/WorkService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"injectables/SigninService.html":{},"injectables/SignonService.html":{},"injectables/UsersService.html":{},"injectables/WorkService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SigninService.html":{},"injectables/SignonService.html":{},"injectables/UsersService.html":{},"injectables/WorkService.html":{},"overview.html":{}}}],["injectconnection",{"_index":368,"title":{},"body":{"injectables/UsersService.html":{},"injectables/WorkService.html":{}}}],["injectconnection('users",{"_index":371,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectconnection('work",{"_index":438,"title":{},"body":{"injectables/WorkService.html":{}}}],["injectmodel",{"_index":369,"title":{},"body":{"injectables/UsersService.html":{},"injectables/WorkService.html":{}}}],["injectmodel('user",{"_index":370,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel('workers",{"_index":436,"title":{},"body":{"injectables/WorkService.html":{}}}],["injectmodel('working",{"_index":437,"title":{},"body":{"injectables/WorkService.html":{}}}],["inspired",{"_index":535,"title":{},"body":{"index.html":{}}}],["installation",{"_index":542,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":544,"title":{},"body":{"index.html":{}}}],["interface",{"_index":230,"title":{"interfaces/Payload.html":{},"interfaces/UserModel.html":{},"interfaces/WorkDay.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"interfaces/WorkerModel.html":{}},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"interfaces/UserModel.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":286,"title":{},"body":{"interfaces/Payload.html":{},"interfaces/UserModel.html":{},"interfaces/WorkDay.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"interfaces/WorkerModel.html":{},"overview.html":{}}}],["join",{"_index":571,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":152,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtauthguard",{"_index":136,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/SigninController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["jwtauthmodule",{"_index":93,"title":{"modules/JwtAuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtauthservice",{"_index":115,"title":{"injectables/JwtAuthService.html":{}},"body":{"injectables/AuthService.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"coverage.html":{},"overview.html":{}}}],["jwtconstants",{"_index":150,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.refreshtoken",{"_index":212,"title":{},"body":{"modules/JwtRefreshAuthModule.html":{}}}],["jwtconstants.secret",{"_index":155,"title":{},"body":{"modules/JwtAuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":148,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{}}}],["jwtmodule.register",{"_index":153,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{}}}],["jwtrefreshauthguard",{"_index":193,"title":{"guards/JwtRefreshAuthGuard.html":{}},"body":{"guards/JwtRefreshAuthGuard.html":{},"controllers/SigninController.html":{},"coverage.html":{}}}],["jwtrefreshauthmodule",{"_index":94,"title":{"modules/JwtRefreshAuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtrefreshauthservice",{"_index":163,"title":{"injectables/JwtRefreshAuthService.html":{}},"body":{"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":162,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["jwtstrategy",{"_index":146,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":579,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":176,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["license",{"_index":585,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":561,"title":{},"body":{"index.html":{}}}],["local",{"_index":282,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":272,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"controllers/SigninController.html":{},"coverage.html":{}}}],["localstrategy",{"_index":97,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":172,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["login",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"controllers/SigninController.html":{}}}],["login(@body",{"_index":308,"title":{},"body":{"controllers/SigninController.html":{}}}],["login(body",{"_index":298,"title":{},"body":{"controllers/SigninController.html":{}}}],["login(user",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{}}}],["lowercase",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["matching",{"_index":16,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"injectables/UsersService.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"controllers/WorkerController.html":{}}}],["miscellaneous",{"_index":520,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":560,"title":{},"body":{"index.html":{}}}],["mode",{"_index":550,"title":{},"body":{"index.html":{}}}],["model",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{},"injectables/WorkService.html":{},"interfaces/WorkerModel.html":{}}}],["models/work",{"_index":388,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{}}}],["models/worker.model",{"_index":435,"title":{},"body":{"injectables/WorkService.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["module",{"_index":18,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://duzyd20brot9911her32m9710:td8eiphnzyh0znzb@cluster0archstraw",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":347,"title":{},"body":{"interfaces/UserModel.html":{},"injectables/UsersService.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/WorkerModel.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":353,"title":{},"body":{"modules/UsersModule.html":{},"modules/WorkModule.html":{}}}],["mongoosemodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://duzyd20brot9911her32m9710:td8eiphnzyh0znzb@cluster0archstraw",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":574,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":580,"title":{},"body":{"index.html":{}}}],["name",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":538,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":584,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":149,"title":{},"body":{"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["netincome",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["netincomefromsales",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":183,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"injectables/UsersService.html":{},"injectables/WorkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newworkday",{"_index":446,"title":{},"body":{"injectables/WorkService.html":{}}}],["newworkday.save",{"_index":448,"title":{},"body":{"injectables/WorkService.html":{}}}],["newworker",{"_index":439,"title":{},"body":{"injectables/WorkService.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["newworker.save",{"_index":442,"title":{},"body":{"injectables/WorkService.html":{}}}],["node.js",{"_index":526,"title":{},"body":{"index.html":{}}}],["npm",{"_index":543,"title":{},"body":{"index.html":{}}}],["number",{"_index":396,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["numberofemployees",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":201,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["odp",{"_index":332,"title":{},"body":{"controllers/SignonController.html":{}}}],["of(false",{"_index":207,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["of(true",{"_index":206,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["open",{"_index":562,"title":{},"body":{"index.html":{}}}],["optional",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"injectables/UsersService.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["overview",{"_index":589,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":503,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"injectables/UsersService.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"controllers/WorkerController.html":{}}}],["pass",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{}}}],["passport",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":177,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":167,"title":{"interfaces/Payload.html":{}},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Payload.html":{},"coverage.html":{}}}],["payload.role",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.time",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloadrefreshtoken",{"_index":185,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["payloadusertoken",{"_index":220,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["phonenumber",{"_index":392,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":572,"title":{},"body":{"index.html":{}}}],["pln",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["post('new",{"_index":399,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/ApiController.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"controllers/WorkDayController.html":{},"controllers/WorkerController.html":{}}}],["priceforthecollectedbasket",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["priceperkilo",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"injectables/UsersService.html":{},"injectables/WorkService.html":{}}}],["privatesale",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":552,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":525,"title":{},"body":{"index.html":{}}}],["project",{"_index":563,"title":{},"body":{"index.html":{}}}],["promise",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SignonController.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["properties",{"_index":213,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"interfaces/UserModel.html":{},"interfaces/WorkDay.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"interfaces/WorkerModel.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["public",{"_index":160,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["ratio",{"_index":383,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":573,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"coverage.html":{}}}],["refresh_token",{"_index":189,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["refreshtoken",{"_index":186,"title":{},"body":{"injectables/JwtAuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtokens",{"_index":214,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["register(@body",{"_index":331,"title":{},"body":{"controllers/SignonController.html":{}}}],["repository",{"_index":541,"title":{},"body":{"index.html":{}}}],["req",{"_index":294,"title":{},"body":{"controllers/SigninController.html":{}}}],["req.user",{"_index":313,"title":{},"body":{"controllers/SigninController.html":{}}}],["request",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"guards/JwtRefreshAuthGuard.html":{},"controllers/SigninController.html":{}}}],["request.headers.authorization",{"_index":205,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{}}}],["required",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}],["result",{"_index":15,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":17,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["returns",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/SigninController.html":{},"injectables/UsersService.html":{},"controllers/WorkDayController.html":{},"injectables/WorkService.html":{},"controllers/WorkerController.html":{}}}],["rimraf",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":180,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Payload.html":{}}}],["run",{"_index":547,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":202,"title":{},"body":{"guards/JwtRefreshAuthGuard.html":{},"dependencies.html":{}}}],["saleday",{"_index":497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":530,"title":{},"body":{"index.html":{}}}],["schema",{"_index":354,"title":{},"body":{"modules/UsersModule.html":{},"modules/WorkModule.html":{}}}],["schemas/user.schema",{"_index":343,"title":{},"body":{"modules/SignonModule.html":{},"modules/UsersModule.html":{}}}],["schemas/work",{"_index":417,"title":{},"body":{"modules/WorkModule.html":{}}}],["schemas/worker.schema",{"_index":414,"title":{},"body":{"modules/WorkModule.html":{}}}],["secret",{"_index":154,"title":{},"body":{"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":463,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["server",{"_index":531,"title":{},"body":{"index.html":{}}}],["set",{"_index":451,"title":{},"body":{"injectables/WorkService.html":{}}}],["side",{"_index":532,"title":{},"body":{"index.html":{}}}],["signin.controller",{"_index":323,"title":{},"body":{"modules/SigninModule.html":{}}}],["signin.service",{"_index":324,"title":{},"body":{"modules/SigninModule.html":{}}}],["signin/signin.module",{"_index":40,"title":{},"body":{"modules/ApiModule.html":{}}}],["signincontroller",{"_index":287,"title":{"controllers/SigninController.html":{}},"body":{"controllers/SigninController.html":{},"modules/SigninModule.html":{},"coverage.html":{}}}],["signinmodule",{"_index":30,"title":{"modules/SigninModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/SigninModule.html":{},"modules.html":{},"overview.html":{}}}],["signinservice",{"_index":321,"title":{"injectables/SigninService.html":{}},"body":{"modules/SigninModule.html":{},"injectables/SigninService.html":{},"coverage.html":{},"overview.html":{}}}],["signon.controller",{"_index":340,"title":{},"body":{"modules/SignonModule.html":{}}}],["signon.service",{"_index":341,"title":{},"body":{"modules/SignonModule.html":{}}}],["signon/signon.module",{"_index":41,"title":{},"body":{"modules/ApiModule.html":{}}}],["signoncontroller",{"_index":326,"title":{"controllers/SignonController.html":{}},"body":{"controllers/SignonController.html":{},"modules/SignonModule.html":{},"coverage.html":{}}}],["signonmodule",{"_index":31,"title":{"modules/SignonModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/SignonModule.html":{},"modules.html":{},"overview.html":{}}}],["signonservice",{"_index":338,"title":{"injectables/SignonService.html":{}},"body":{"modules/SignonModule.html":{},"injectables/SignonService.html":{},"coverage.html":{},"overview.html":{}}}],["signoptions",{"_index":156,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiController.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"controllers/SigninController.html":{},"modules/SigninModule.html":{},"injectables/SigninService.html":{},"controllers/SignonController.html":{},"modules/SignonModule.html":{},"injectables/SignonService.html":{},"interfaces/UserModel.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"index.html":{}}}],["sponsors",{"_index":566,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../day",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sale",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../work",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../worker.schema.ts",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.controller.ts",{"_index":6,"title":{},"body":{"controllers/ApiController.html":{},"coverage.html":{}}}],["src/api/api.module.ts",{"_index":36,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/auth/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/api/auth/auth.service.ts:11",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:17",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:6",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/constants.ts",{"_index":480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api/auth/jwt",{"_index":137,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/JwtAuthModule.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"modules/JwtRefreshAuthModule.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Payload.html":{},"coverage.html":{}}}],["src/api/auth/local",{"_index":273,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/api/auth/local.strategy.ts",{"_index":277,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/api/auth/local.strategy.ts:12",{"_index":281,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/api/auth/local.strategy.ts:7",{"_index":279,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/api/signin/signin.controller.ts",{"_index":288,"title":{},"body":{"controllers/SigninController.html":{},"coverage.html":{}}}],["src/api/signin/signin.controller.ts:19",{"_index":300,"title":{},"body":{"controllers/SigninController.html":{}}}],["src/api/signin/signin.controller.ts:25",{"_index":293,"title":{},"body":{"controllers/SigninController.html":{}}}],["src/api/signin/signin.controller.ts:31",{"_index":297,"title":{},"body":{"controllers/SigninController.html":{}}}],["src/api/signin/signin.module.ts",{"_index":322,"title":{},"body":{"modules/SigninModule.html":{}}}],["src/api/signin/signin.service.ts",{"_index":325,"title":{},"body":{"injectables/SigninService.html":{},"coverage.html":{}}}],["src/api/signon/signon.controller.ts",{"_index":327,"title":{},"body":{"controllers/SignonController.html":{},"coverage.html":{}}}],["src/api/signon/signon.module.ts",{"_index":339,"title":{},"body":{"modules/SignonModule.html":{}}}],["src/api/signon/signon.service.ts",{"_index":344,"title":{},"body":{"injectables/SignonService.html":{},"coverage.html":{}}}],["src/api/users/usermodel.ts",{"_index":345,"title":{},"body":{"interfaces/UserModel.html":{},"coverage.html":{}}}],["src/api/users/users.module.ts",{"_index":351,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/api/users/users.service.ts",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/api/users/users.service.ts:13",{"_index":364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/api/users/users.service.ts:18",{"_index":365,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/api/users/users.service.ts:22",{"_index":367,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/api/users/users.service.ts:7",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/api/work/work",{"_index":378,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"coverage.html":{}}}],["src/api/work/work.module.ts",{"_index":411,"title":{},"body":{"modules/WorkModule.html":{}}}],["src/api/work/work.service.ts",{"_index":421,"title":{},"body":{"injectables/WorkService.html":{},"coverage.html":{}}}],["src/api/work/work.service.ts:16",{"_index":433,"title":{},"body":{"injectables/WorkService.html":{}}}],["src/api/work/work.service.ts:22",{"_index":431,"title":{},"body":{"injectables/WorkService.html":{}}}],["src/api/work/work.service.ts:32",{"_index":430,"title":{},"body":{"injectables/WorkService.html":{}}}],["src/api/work/work.service.ts:38",{"_index":434,"title":{},"body":{"injectables/WorkService.html":{}}}],["src/api/work/work.service.ts:8",{"_index":426,"title":{},"body":{"injectables/WorkService.html":{}}}],["src/api/work/worker/worker.controller.ts",{"_index":455,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["src/api/work/worker/worker.controller.ts:24",{"_index":469,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/api/work/worker/worker.controller.ts:34",{"_index":471,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/api/work/worker/worker.controller.ts:40",{"_index":467,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/app.controller.ts",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":488,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/work",{"_index":407,"title":{},"body":{"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"coverage.html":{}}}],["src/models/worker.model.ts",{"_index":472,"title":{},"body":{"interfaces/WorkerModel.html":{},"coverage.html":{}}}],["src/schemas/day",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/sale",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/user.schema.ts",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/work",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/worker.schema.ts",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":548,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":551,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":553,"title":{},"body":{"index.html":{}}}],["started",{"_index":524,"title":{"index.html":{}},"body":{}}],["starter",{"_index":540,"title":{},"body":{"index.html":{}}}],["startwork",{"_index":393,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":395,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":238,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["stay",{"_index":576,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"interfaces/UserModel.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":567,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":391,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":587,"title":{},"body":{"modules.html":{}}}],["table",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":556,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":559,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":558,"title":{},"body":{"index.html":{}}}],["tests",{"_index":555,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":565,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(body",{"_index":309,"title":{},"body":{"controllers/SigninController.html":{}}}],["this.authservice.validateuser(username",{"_index":283,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.createtoken(payload",{"_index":188,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["this.jwtauthservice",{"_index":232,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.jwtauthservice.createtoken(this.payload",{"_index":249,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.jwtauthservice.login(user",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtauthservice.validateuser(user",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtrefreshauthservice.createrefreshtoken(payloadrefreshtoken",{"_index":190,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["this.jwtrefreshauthservice.getrefreshtoken(req.headers.authorization",{"_index":317,"title":{},"body":{"controllers/SigninController.html":{}}}],["this.jwtservice.sign(payload",{"_index":191,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.jwtservice.verify(token",{"_index":248,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.payload",{"_index":231,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.refreshtokens.includes(token",{"_index":244,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.refreshtokens.push(token",{"_index":234,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["this.usermodel(user",{"_index":373,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.createuser(user",{"_index":333,"title":{},"body":{"controllers/SignonController.html":{}}}],["this.usersservice.findone(mail",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.workdaymodel(workday",{"_index":447,"title":{},"body":{"injectables/WorkService.html":{}}}],["this.workdaymodel.findone",{"_index":449,"title":{},"body":{"injectables/WorkService.html":{}}}],["this.workdaymodel.findone({date",{"_index":444,"title":{},"body":{"injectables/WorkService.html":{}}}],["this.workdaymodel.updateone({date",{"_index":450,"title":{},"body":{"injectables/WorkService.html":{}}}],["this.workermodel(worker",{"_index":440,"title":{},"body":{"injectables/WorkService.html":{}}}],["this.workermodel.find",{"_index":453,"title":{},"body":{"injectables/WorkService.html":{}}}],["this.workservice.addworkertoworkday",{"_index":459,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["this.workservice.addworkertoworkday(worker",{"_index":465,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["this.workservice.createworkday(workday",{"_index":402,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{}}}],["this.workservice.createworker(worker",{"_index":458,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["this.workservice.getallworkers",{"_index":462,"title":{},"body":{"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["thisworkday",{"_index":429,"title":{},"body":{"injectables/WorkService.html":{}}}],["throw",{"_index":242,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["time",{"_index":182,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Payload.html":{}}}],["timestamps",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":233,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["totalcollectedbasketsofstrawberries",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalremunerationforemployees",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsales",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":577,"title":{},"body":{"index.html":{}}}],["trim",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthService.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":247,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["twitter",{"_index":583,"title":{},"body":{"index.html":{}}}],["type",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"guards/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{},"interfaces/UserModel.html":{},"injectables/UsersService.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":539,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":240,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["unauthorizedexception",{"_index":229,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["unauthorizedexception(answear",{"_index":243,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["unique",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":554,"title":{},"body":{"index.html":{}}}],["usecreateindex",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"controllers/SigninController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["useguards(jwtauthguard",{"_index":310,"title":{},"body":{"controllers/SigninController.html":{},"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["useguards(jwtauthguard)@get('get",{"_index":470,"title":{},"body":{"controllers/WorkerController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":292,"title":{},"body":{"controllers/SigninController.html":{}}}],["useguards(jwtauthguard)@post('new",{"_index":405,"title":{},"body":{"controllers/WorkDayController.html":{},"controllers/WorkerController.html":{}}}],["useguards(jwtrefreshauthguard",{"_index":314,"title":{},"body":{"controllers/SigninController.html":{}}}],["useguards(jwtrefreshauthguard)@get('token",{"_index":296,"title":{},"body":{"controllers/SigninController.html":{}}}],["useguards(localauthguard",{"_index":307,"title":{},"body":{"controllers/SigninController.html":{}}}],["useguards(localauthguard)@post",{"_index":299,"title":{},"body":{"controllers/SigninController.html":{}}}],["usenewurlparser",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SignonController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.error",{"_index":284,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user.log",{"_index":285,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user.password",{"_index":174,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["user.username",{"_index":179,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["usermodel",{"_index":328,"title":{"interfaces/UserModel.html":{}},"body":{"controllers/SignonController.html":{},"interfaces/UserModel.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["username",{"_index":178,"title":{},"body":{"injectables/JwtAuthService.html":{},"injectables/JwtRefreshAuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Payload.html":{}}}],["users",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["users.service",{"_index":352,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/usermodel",{"_index":329,"title":{},"body":{"controllers/SignonController.html":{}}}],["users/users.module",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{}}}],["users/users.service",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{}}}],["userschema",{"_index":342,"title":{},"body":{"modules/SignonModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":306,"title":{},"body":{"controllers/SigninController.html":{},"controllers/SignonController.html":{}}}],["usersmodule",{"_index":95,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":114,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"modules/JwtRefreshAuthModule.html":{},"controllers/SigninController.html":{},"controllers/SignonController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":280,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{}}}],["validateuser(mail",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(user",{"_index":169,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["value",{"_index":227,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":594,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":549,"title":{},"body":{"index.html":{}}}],["website",{"_index":581,"title":{},"body":{"index.html":{}}}],["work",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkModule.html":{}}}],["work.service",{"_index":386,"title":{},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{}}}],["work/work.module",{"_index":42,"title":{},"body":{"modules/ApiModule.html":{}}}],["workday",{"_index":377,"title":{"interfaces/WorkDay.html":{}},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workday.date",{"_index":445,"title":{},"body":{"injectables/WorkService.html":{}}}],["workday.employees",{"_index":452,"title":{},"body":{"injectables/WorkService.html":{}}}],["workdaycontroller",{"_index":398,"title":{"controllers/WorkDayController.html":{}},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"interfaces/Worker-1.html":{},"coverage.html":{}}}],["workdaymodel",{"_index":387,"title":{"interfaces/WorkDayModel.html":{}},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"coverage.html":{}}}],["worker",{"_index":384,"title":{"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{}},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"interfaces/WorkDayModel.html":{},"injectables/WorkService.html":{},"interfaces/Worker.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["worker/worker.controller",{"_index":416,"title":{},"body":{"modules/WorkModule.html":{}}}],["workercontroller",{"_index":412,"title":{"controllers/WorkerController.html":{}},"body":{"modules/WorkModule.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["workermodel",{"_index":427,"title":{"interfaces/WorkerModel.html":{}},"body":{"injectables/WorkService.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"interfaces/WorkerModel.html":{},"coverage.html":{}}}],["workers",{"_index":419,"title":{},"body":{"modules/WorkModule.html":{},"injectables/WorkService.html":{}}}],["workerschema",{"_index":413,"title":{},"body":{"modules/WorkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":420,"title":{},"body":{"modules/WorkModule.html":{}}}],["workmodule",{"_index":32,"title":{"modules/WorkModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/WorkModule.html":{},"modules.html":{},"overview.html":{}}}],["workservice",{"_index":385,"title":{"injectables/WorkService.html":{}},"body":{"interfaces/WorkDay.html":{},"controllers/WorkDayController.html":{},"modules/WorkModule.html":{},"injectables/WorkService.html":{},"interfaces/Worker-1.html":{},"interfaces/Worker-2.html":{},"controllers/WorkerController.html":{},"coverage.html":{},"overview.html":{}}}],["world",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":241,"title":{},"body":{"injectables/JwtRefreshAuthService.html":{},"interfaces/Payload.html":{}}}],["you'd",{"_index":570,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"modules/JwtRefreshAuthModule.html":{},"modules/SigninModule.html":{},"modules/SignonModule.html":{},"modules/UsersModule.html":{},"modules/WorkModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiController.html":{"url":"controllers/ApiController.html","title":"controller - ApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('/api')\nexport class ApiController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nSigninModule\n\nSigninModule\n\nApiModule -->\n\nSigninModule->ApiModule\n\n\n\n\n\nSignonModule\n\nSignonModule\n\nApiModule -->\n\nSignonModule->ApiModule\n\n\n\n\n\nWorkModule\n\nWorkModule\n\nApiModule -->\n\nWorkModule->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SigninModule\n                        \n                        \n                            SignonModule\n                        \n                        \n                            WorkModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { ApiController } from './api.controller';\nimport { SigninModule } from './signin/signin.module';\nimport { SignonModule } from './signon/signon.module';\nimport { WorkModule } from './work/work.module';\n\n@Module({\n  imports: [AuthModule, SigninModule, SignonModule, WorkModule],\n  controllers: [ApiController],\n  providers: [],\n  exports: [],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ApiModule } from './api/api.module';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    ApiModule,\n    MongooseModule.forRoot(\n      'mongodb+srv://duzyD20Brot9911her32M9710:TD8EIphNzYh0ZNzb@cluster0archstraw-fxmmt.mongodb.net/users?retryWrites=true&w=majority',\n      { useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex: true, connectionName: 'users' },\n    ),\n    MongooseModule.forRoot('mongodb+srv://duzyD20Brot9911her32M9710:TD8EIphNzYh0ZNzb@cluster0archstraw-fxmmt.mongodb.net/work?retryWrites=true&w=majority',\n      { useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex: true, connectionName: 'work' },)\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtAuthModule->AuthModule\n\n\n\n\n\nJwtRefreshAuthModule\n\nJwtRefreshAuthModule\n\nAuthModule -->\n\nJwtRefreshAuthModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtAuthModule\n                        \n                        \n                            JwtRefreshAuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtAuthModule } from './jwt-auth/jwt-auth.module';\nimport { JwtRefreshAuthModule } from './jwt-refresh-auth/jwt-refresh-auth.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtAuthModule,\n    JwtRefreshAuthModule],\n  providers: [AuthService, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtAuthService: JwtAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtAuthService\n                                                  \n                                                        \n                                                                        JwtAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(mail: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtAuthService } from './jwt-auth/jwt-auth.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private usersService: UsersService,\n              private jwtAuthService: JwtAuthService) {\n  }\n\n  async validateUser(mail: string, pass: string): Promise {\n    const user = await this.usersService.findOne(mail);\n\n    return this.jwtAuthService.validateUser(user, pass);\n  }\n\n  async login(user: any) {\n    return this.jwtAuthService.login(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtAuthModule.html":{"url":"modules/JwtAuthModule.html","title":"module - JwtAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JwtAuthModule\n\n\n\ncluster_JwtAuthModule_imports\n\n\n\ncluster_JwtAuthModule_exports\n\n\n\ncluster_JwtAuthModule_providers\n\n\n\n\nJwtRefreshAuthModule\n\nJwtRefreshAuthModule\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\nJwtAuthModule -->\n\nJwtRefreshAuthModule->JwtAuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nJwtAuthModule -->\n\nUsersModule->JwtAuthModule\n\n\n\n\n\nJwtAuthService \n\nJwtAuthService \n\nJwtAuthService  -->\n\nJwtAuthModule->JwtAuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nJwtAuthModule->JwtStrategy \n\n\n\n\n\nJwtAuthService\n\nJwtAuthService\n\nJwtAuthModule -->\n\nJwtAuthService->JwtAuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nJwtAuthModule -->\n\nJwtStrategy->JwtAuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/jwt-auth/jwt-auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtRefreshAuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtAuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from '../constants';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtAuthService } from './jwt-auth.service';\nimport { UsersModule } from '../../users/users.module';\nimport { JwtRefreshAuthModule } from '../jwt-refresh-auth/jwt-refresh-auth.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtRefreshAuthModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: {expiresIn: '600s'},\n    }),\n  ],\n  providers: [\n    JwtStrategy,\n    JwtAuthService,\n  ],\n  exports: [JwtStrategy, JwtAuthService],\n})\nexport class JwtAuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthService.html":{"url":"injectables/JwtAuthService.html","title":"injectable - JwtAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/jwt-auth/jwt-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createToken\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, jwtRefreshAuthService: JwtRefreshAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/jwt-auth/jwt-auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtRefreshAuthService\n                                                  \n                                                        \n                                                                        JwtRefreshAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-auth/jwt-auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-auth/jwt-auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(user, pass)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-auth/jwt-auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtRefreshAuthService } from '../jwt-refresh-auth/jwt-refresh-auth.service';\n\n@Injectable()\nexport class JwtAuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private jwtRefreshAuthService: JwtRefreshAuthService,\n  ) {\n  }\n\n  public validateUser(user, pass): any {\n    if (!user) {\n      return {\n        error: true,\n        log: 'email',\n      };\n    }\n    if (user.password === pass) {\n      const { firstName, lastName, email, ...result } = user;\n      return { firstName, lastName, email };\n    }\n    return {\n      error: true,\n      log: 'password',\n    };\n  }\n\n  public async login(user: any) {\n    const payload = { username: user.username, role: 'admin', time: new Date().toString() };\n    const payloadRefreshToken = {username: user.username, role: 'refreshToken', time: new Date().toString()};\n    return {\n      access_token: this.createToken(payload),\n      refresh_token: await this.jwtRefreshAuthService.createRefreshToken(payloadRefreshToken, payload, this),\n    };\n  }\n  public createToken(payload) {\n    return this.jwtService.sign(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtRefreshAuthGuard.html":{"url":"guards/JwtRefreshAuthGuard.html","title":"guard - JwtRefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtRefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/api/auth/jwt-refresh-auth/jwt-refresh-auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { CanActivate } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class JwtRefreshAuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n    ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    if (request.headers.authorization) { return of(true); }\n    return of(false);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtRefreshAuthModule.html":{"url":"modules/JwtRefreshAuthModule.html","title":"module - JwtRefreshAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtRefreshAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JwtRefreshAuthModule\n\n\n\ncluster_JwtRefreshAuthModule_exports\n\n\n\ncluster_JwtRefreshAuthModule_providers\n\n\n\n\nJwtRefreshAuthService \n\nJwtRefreshAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nJwtRefreshAuthModule\n\nJwtRefreshAuthModule\n\nJwtRefreshAuthService  -->\n\nJwtRefreshAuthModule->JwtRefreshAuthService \n\n\n\nJwtStrategy  -->\n\nJwtRefreshAuthModule->JwtStrategy \n\n\n\n\n\nJwtRefreshAuthService\n\nJwtRefreshAuthService\n\nJwtRefreshAuthModule -->\n\nJwtRefreshAuthService->JwtRefreshAuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nJwtRefreshAuthModule -->\n\nJwtStrategy->JwtRefreshAuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/jwt-refresh-auth/jwt-refresh-auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtRefreshAuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtRefreshAuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtRefreshAuthService } from './jwt-refresh-auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from '../constants';\nimport { JwtStrategy } from '../jwt-auth/jwt.strategy';\nimport { JwtAuthModule } from '../jwt-auth/jwt-auth.module';\nimport { JwtAuthService } from '../jwt-auth/jwt-auth.service';\nimport { UsersService } from '../../users/users.service';\n\n@Module({\n  imports: [\n    JwtModule.register({\n    secret: jwtConstants.refreshToken,\n    }),\n  ],\n  providers: [JwtRefreshAuthService, JwtStrategy],\n  exports: [JwtRefreshAuthService, JwtStrategy],\n})\nexport class JwtRefreshAuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshAuthService.html":{"url":"injectables/JwtRefreshAuthService.html","title":"injectable - JwtRefreshAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtAuthService\n                            \n                            \n                                    Private\n                                payload\n                            \n                            \n                                    Private\n                                refreshTokens\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createRefreshToken\n                            \n                            \n                                    Public\n                                    Async\n                                getRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createRefreshToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRefreshToken(payload: Payload, payloadUserToken: Payload, jwtService)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payloadUserToken\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jwtService\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getRefreshToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRefreshToken(authorization)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorization\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jwtAuthService\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Payload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshTokens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\ninterface Payload {\n  username: string;\n  role: string;\n  time: string;\n}\n\n@Injectable()\nexport class JwtRefreshAuthService {\n  private refreshTokens: string[] = [];\n  private payload: Payload;\n  private jwtAuthService;\n\n  constructor(\n    private jwtService: JwtService,\n  ) {\n  }\n\n  public async createRefreshToken(payload: Payload, payloadUserToken: Payload, jwtService): Promise {\n    this.payload = payloadUserToken;\n    this.jwtAuthService = jwtService;\n    const token = await this.jwtService.sign(payload);\n    this.refreshTokens.push(token);\n    return token;\n  }\n\n  public async getRefreshToken(authorization): Promise {\n    const token: string = authorization.split(' ')[1];\n    if (!token) {\n      const answear = {\n        statusCode: 401,\n        error: 'Unauthorized',\n        log: 'Wrong Refresh Token',\n      };\n      throw new UnauthorizedException(answear);\n    }\n    if (!this.refreshTokens.includes(token)) {\n      const answear = {\n        statusCode: 403,\n        error: 'Unauthorized',\n        log: 'This Token is not exist!',\n      };\n      throw new UnauthorizedException(answear);\n    }\n    try {\n      await this.jwtService.verify(token);\n      return await this.jwtAuthService.createToken(this.payload);\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/jwt-auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/jwt-auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/jwt-auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from '../constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { role: payload.role , username: payload.username, time: payload.time};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/local-auth-guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n constructor(private authService: AuthService) {\n   super();\n }\n\n async validate(username: string, password: string): Promise {\n   const user = await this.authService.validateUser(username, password );\n   if (user.error) {\n     const answear = {\n       statusCode: 401,\n       error: 'Unauthorized',\n       log: user.log,\n     };\n     throw new UnauthorizedException(answear);\n   }\n   return user;\n }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload.html":{"url":"interfaces/Payload.html","title":"interface - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        role\n                                \n                                \n                                        time\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\ninterface Payload {\n  username: string;\n  role: string;\n  time: string;\n}\n\n@Injectable()\nexport class JwtRefreshAuthService {\n  private refreshTokens: string[] = [];\n  private payload: Payload;\n  private jwtAuthService;\n\n  constructor(\n    private jwtService: JwtService,\n  ) {\n  }\n\n  public async createRefreshToken(payload: Payload, payloadUserToken: Payload, jwtService): Promise {\n    this.payload = payloadUserToken;\n    this.jwtAuthService = jwtService;\n    const token = await this.jwtService.sign(payload);\n    this.refreshTokens.push(token);\n    return token;\n  }\n\n  public async getRefreshToken(authorization): Promise {\n    const token: string = authorization.split(' ')[1];\n    if (!token) {\n      const answear = {\n        statusCode: 401,\n        error: 'Unauthorized',\n        log: 'Wrong Refresh Token',\n      };\n      throw new UnauthorizedException(answear);\n    }\n    if (!this.refreshTokens.includes(token)) {\n      const answear = {\n        statusCode: 403,\n        error: 'Unauthorized',\n        log: 'This Token is not exist!',\n      };\n      throw new UnauthorizedException(answear);\n    }\n    try {\n      await this.jwtService.verify(token);\n      return await this.jwtAuthService.createToken(this.payload);\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SigninController.html":{"url":"controllers/SigninController.html","title":"controller - SigninController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SigninController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/signin/signin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api/sign-in\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                getRefreshToken\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/api/signin/signin.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRefreshToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRefreshToken(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshAuthGuard)@Get('token')\n                \n            \n\n            \n                \n                    Defined in src/api/signin/signin.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/api/signin/signin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { LocalAuthGuard } from '../auth/local-auth-guard';\nimport { AuthService } from '../auth/auth.service';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { JwtRefreshAuthGuard } from '../auth/jwt-refresh-auth/jwt-refresh-auth.guard';\nimport { JwtRefreshAuthService } from '../auth/jwt-refresh-auth/jwt-refresh-auth.service';\n\n@Controller('/api/sign-in')\nexport class SigninController {\n  constructor(\n    private userService: UsersService,\n    private authService: AuthService,\n    private jwtRefreshAuthService: JwtRefreshAuthService,\n    ) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post()\n  async login(@Body() body, @Request() req) {\n    return this.authService.login(body);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @UseGuards(JwtRefreshAuthGuard)\n  @Get('token')\n  async getRefreshToken(@Request() req) {\n    return await this.jwtRefreshAuthService.getRefreshToken(req.headers.authorization);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SigninModule.html":{"url":"modules/SigninModule.html","title":"module - SigninModule","body":"\n                   \n\n\n\n\n    Modules\n    SigninModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SigninModule\n\n\n\ncluster_SigninModule_imports\n\n\n\ncluster_SigninModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSigninModule\n\nSigninModule\n\nSigninModule -->\n\nAuthModule->SigninModule\n\n\n\n\n\nJwtRefreshAuthModule\n\nJwtRefreshAuthModule\n\nSigninModule -->\n\nJwtRefreshAuthModule->SigninModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nSigninModule -->\n\nUsersModule->SigninModule\n\n\n\n\n\nSigninService\n\nSigninService\n\nSigninModule -->\n\nSigninService->SigninModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/signin/signin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SigninService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SigninController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            JwtRefreshAuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SigninController } from './signin.controller';\nimport { SigninService } from './signin.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { JwtRefreshAuthModule } from '../auth/jwt-refresh-auth/jwt-refresh-auth.module';\n\n@Module({\n  imports: [UsersModule, AuthModule, JwtRefreshAuthModule],\n  controllers: [SigninController],\n  providers: [SigninService],\n})\nexport class SigninModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SigninService.html":{"url":"injectables/SigninService.html","title":"injectable - SigninService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SigninService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/signin/signin.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SigninService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SignonController.html":{"url":"controllers/SignonController.html","title":"controller - SignonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SignonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/signon/signon.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/sign-on\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { UserModel } from '../users/UserModel';\nimport { UsersService } from '../users/users.service';\n\n@Controller('api/sign-on')\nexport class SignonController {\n  // constructor( private userService: UsersService) {}\n  //\n  // @Post()\n  // async register(@Body() user: UserModel): Promise {\n  //   const odp = await this.userService.createUser(user);\n  //   if (odp) {\n  //     return 'User has been created.';\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignonModule.html":{"url":"modules/SignonModule.html","title":"module - SignonModule","body":"\n                   \n\n\n\n\n    Modules\n    SignonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignonModule\n\n\n\ncluster_SignonModule_imports\n\n\n\ncluster_SignonModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nSignonModule\n\nSignonModule\n\nSignonModule -->\n\nUsersModule->SignonModule\n\n\n\n\n\nSignonService\n\nSignonService\n\nSignonModule -->\n\nSignonService->SignonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/signon/signon.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SignonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SignonController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SignonController } from './signon.controller';\nimport { SignonService } from './signon.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../../schemas/user.schema';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  controllers: [SignonController],\n  providers: [SignonService],\n})\nexport class SignonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignonService.html":{"url":"injectables/SignonService.html","title":"injectable - SignonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SignonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/signon/signon.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SignonService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/users/UserModel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface UserModel extends Document {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../../schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'User', schema: UserSchema}], 'users'),\n  ],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/api/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in src/api/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/users/users.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Connection, Model } from 'mongoose';\nimport { UserModel } from './UserModel';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel('User') private userModel: Model,\n    @InjectConnection('users') connection: Connection,\n  ) {}\n\n  async createUser(user: UserModel): Promise {\n    const createdUser = new this.userModel(user);\n    return createdUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(mail: string): Promise {\n    return this.userModel.findOne({ email: mail});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkDay.html":{"url":"interfaces/WorkDay.html","title":"interface - WorkDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/work/work-day/work-day.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        employees\n                                \n                                \n                                        ratio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employees\n                                    \n                                \n                                \n                                    \n                                        employees:     Worker[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Worker[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratio\n                                    \n                                \n                                \n                                    \n                                        ratio:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../../auth/jwt-auth/jwt-auth.guard';\nimport { WorkService } from '../work.service';\nimport { WorkDayModel } from '../../../models/work-day.model';\nimport { worker } from 'cluster';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  phoneNumber: string,\n  startWork: string,\n  endWork: string,\n  state: number,\n  date: string,\n  _id: string,\n}\n\ninterface WorkDay {\n  date: String,\n  ratio: String,\n  employees: Worker[],\n}\n\n@Controller('/api/')\nexport class WorkDayController {\n  constructor(private workService: WorkService) {\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-day')\n  async createWorkDay(@Body() workDay: WorkDayModel) : Promise {\n    const day = await this.workService.createWorkDay(workDay);\n    return day;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkDayController.html":{"url":"controllers/WorkDayController.html","title":"controller - WorkDayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkDayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/work/work-day/work-day.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api/\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWorkDay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWorkDay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorkDay(workDay: WorkDayModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('new-day')\n                \n            \n\n            \n                \n                    Defined in src/api/work/work-day/work-day.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workDay\n                                    \n                                                WorkDayModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../../auth/jwt-auth/jwt-auth.guard';\nimport { WorkService } from '../work.service';\nimport { WorkDayModel } from '../../../models/work-day.model';\nimport { worker } from 'cluster';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  phoneNumber: string,\n  startWork: string,\n  endWork: string,\n  state: number,\n  date: string,\n  _id: string,\n}\n\ninterface WorkDay {\n  date: String,\n  ratio: String,\n  employees: Worker[],\n}\n\n@Controller('/api/')\nexport class WorkDayController {\n  constructor(private workService: WorkService) {\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-day')\n  async createWorkDay(@Body() workDay: WorkDayModel) : Promise {\n    const day = await this.workService.createWorkDay(workDay);\n    return day;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkDayModel.html":{"url":"interfaces/WorkDayModel.html","title":"interface - WorkDayModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkDayModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/work-day.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        employees\n                                \n                                \n                                        ratio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employees\n                                    \n                                \n                                \n                                    \n                                        employees:     Worker[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Worker[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratio\n                                    \n                                \n                                \n                                    \n                                        ratio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document} from 'mongoose';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  startWork?: string,\n  endWork?: string,\n  state?: number,\n}\n\nexport interface WorkDayModel extends Document {\n  date: string,\n  ratio: string,\n  employees: Worker[],\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkModule.html":{"url":"modules/WorkModule.html","title":"module - WorkModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkModule\n\n\n\ncluster_WorkModule_providers\n\n\n\n\nWorkService\n\nWorkService\n\n\n\nWorkModule\n\nWorkModule\n\nWorkModule -->\n\nWorkService->WorkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/work/work.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkDayController\n                        \n                        \n                            WorkerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { WorkerSchema } from '../../schemas/worker.schema';\nimport { WorkService } from './work.service';\nimport { WorkDayController } from './work-day/work-day.controller';\nimport { WorkerController } from './worker/worker.controller';\nimport { WorkDay } from '../../schemas/work-day.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'workers', schema: WorkerSchema}, {name: 'working-day', schema: WorkDay}], 'work')\n  ],\n  providers: [WorkService],\n  controllers: [\n    WorkDayController,\n    WorkerController,\n  ],\n})\nexport class WorkModule {\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkService.html":{"url":"injectables/WorkService.html","title":"injectable - WorkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/work/work.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addWorkerToWorkDay\n                            \n                            \n                                    Async\n                                createWorkDay\n                            \n                            \n                                    Async\n                                createWorker\n                            \n                            \n                                    Async\n                                getAllWorkers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(workerModel: Model, workDayModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/api/work/work.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workerModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workDayModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addWorkerToWorkDay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addWorkerToWorkDay(worker: WorkerModel, thisWorkDay: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/work/work.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    worker\n                                    \n                                                WorkerModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thisWorkDay\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWorkDay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorkDay(workDay: WorkDayModel)\n                \n            \n\n\n            \n                \n                    Defined in src/api/work/work.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workDay\n                                    \n                                                WorkDayModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWorker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(worker: WorkerModel)\n                \n            \n\n\n            \n                \n                    Defined in src/api/work/work.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    worker\n                                    \n                                                WorkerModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllWorkers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllWorkers()\n                \n            \n\n\n            \n                \n                    Defined in src/api/work/work.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Connection, Model } from 'mongoose';\nimport { WorkerModel } from '../../models/worker.model';\nimport { WorkDayModel } from '../../models/work-day.model';\n\n@Injectable()\nexport class WorkService {\n  constructor(\n    @InjectModel('workers') private workerModel: Model,\n    @InjectModel('working-day') private workDayModel: Model,\n    @InjectConnection('work') connection: Connection,\n  ) {\n  }\n\n  async createWorker(worker: WorkerModel): Promise {\n    const newWorker = new this.workerModel(worker);\n    const answer = await newWorker.save();\n    return answer._id;\n  }\n\n  async createWorkDay(workDay: WorkDayModel): Promise {\n    const day = await this.workDayModel.findOne({date: workDay.date});\n    if (!day) {\n      const newWorkDay = new this.workDayModel(workDay);\n      const answer = await newWorkDay.save();\n      return answer;\n    }\n    return day;\n  }\n\n  async addWorkerToWorkDay(worker: WorkerModel, thisWorkDay: string): Promise {\n    const workDay = await this.workDayModel.findOne({ date: thisWorkDay });\n    const answer = await this.workDayModel.updateOne({date: thisWorkDay}, {$set: {employees: [...workDay.employees, worker]}})\n    return answer;\n  }\n\n  async getAllWorkers(): Promise {\n    const workers = await this.workerModel.find();\n    return workers;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Worker.html":{"url":"interfaces/Worker.html","title":"interface - Worker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Worker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/work-day.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        endWork\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        startWork\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endWork\n                                    \n                                \n                                \n                                    \n                                        endWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startWork\n                                    \n                                \n                                \n                                    \n                                        startWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document} from 'mongoose';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  startWork?: string,\n  endWork?: string,\n  state?: number,\n}\n\nexport interface WorkDayModel extends Document {\n  date: string,\n  ratio: string,\n  employees: Worker[],\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Worker-1.html":{"url":"interfaces/Worker-1.html","title":"interface - Worker-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Worker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/work/work-day/work-day.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        date\n                                \n                                \n                                        endWork\n                                \n                                \n                                        name\n                                \n                                \n                                        phoneNumber\n                                \n                                \n                                        startWork\n                                \n                                \n                                        state\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endWork\n                                    \n                                \n                                \n                                    \n                                        endWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startWork\n                                    \n                                \n                                \n                                    \n                                        startWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../../auth/jwt-auth/jwt-auth.guard';\nimport { WorkService } from '../work.service';\nimport { WorkDayModel } from '../../../models/work-day.model';\nimport { worker } from 'cluster';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  phoneNumber: string,\n  startWork: string,\n  endWork: string,\n  state: number,\n  date: string,\n  _id: string,\n}\n\ninterface WorkDay {\n  date: String,\n  ratio: String,\n  employees: Worker[],\n}\n\n@Controller('/api/')\nexport class WorkDayController {\n  constructor(private workService: WorkService) {\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-day')\n  async createWorkDay(@Body() workDay: WorkDayModel) : Promise {\n    const day = await this.workService.createWorkDay(workDay);\n    return day;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Worker-2.html":{"url":"interfaces/Worker-2.html","title":"interface - Worker-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Worker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/work/worker/worker.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        endWork\n                                \n                                \n                                        name\n                                \n                                \n                                        phoneNumber\n                                \n                                \n                                            Optional\n                                        startWork\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endWork\n                                    \n                                \n                                \n                                    \n                                        endWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startWork\n                                    \n                                \n                                \n                                    \n                                        startWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { WorkService } from '../work.service';\nimport { JwtAuthGuard } from '../../auth/jwt-auth/jwt-auth.guard';\nimport { WorkerModel } from '../../../models/worker.model';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  phoneNumber: string,\n  startWork?: string,\n  endWork?: string,\n  state?: number,\n  date?: string,\n  _id?: string,\n}\n\n@Controller('/api/')\nexport class WorkerController {\n  constructor(private workService: WorkService) {\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-employee')\n  async createWorker(@Body() body: WorkerModel) : Promise {\n    const {startWork, endWork, state, date, ...worker} : WorkerModel = body;\n    const _id = await this.workService.createWorker(worker as WorkerModel);\n    const { phoneNumber, ...newWorker} : WorkerModel = body;\n    const answer = await this.workService.addWorkerToWorkDay({ ...newWorker, startWork, endWork, state, _id} as WorkerModel, date);\n    return answer;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('get-employee')\n  async getWorkers() : Promise {\n    return await this.workService.getAllWorkers();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-employee-select')\n  async addWorkerToWorkDay(@Body() body: Worker) : Promise {\n    try {\n      const {date, phoneNumber, ...worker}  = body;\n      await this.workService.addWorkerToWorkDay(worker as WorkerModel, date);\n      return true;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkerController.html":{"url":"controllers/WorkerController.html","title":"controller - WorkerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/work/worker/worker.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /api/\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addWorkerToWorkDay\n                            \n                            \n                                    Async\n                                createWorker\n                            \n                            \n                                    Async\n                                getWorkers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addWorkerToWorkDay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addWorkerToWorkDay(body: Worker)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('new-employee-select')\n                \n            \n\n            \n                \n                    Defined in src/api/work/worker/worker.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                Worker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWorker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(body: WorkerModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('new-employee')\n                \n            \n\n            \n                \n                    Defined in src/api/work/worker/worker.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                WorkerModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getWorkers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWorkers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('get-employee')\n                \n            \n\n            \n                \n                    Defined in src/api/work/worker/worker.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { WorkService } from '../work.service';\nimport { JwtAuthGuard } from '../../auth/jwt-auth/jwt-auth.guard';\nimport { WorkerModel } from '../../../models/worker.model';\n\ninterface Worker {\n  name: string,\n  surname: string,\n  phoneNumber: string,\n  startWork?: string,\n  endWork?: string,\n  state?: number,\n  date?: string,\n  _id?: string,\n}\n\n@Controller('/api/')\nexport class WorkerController {\n  constructor(private workService: WorkService) {\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-employee')\n  async createWorker(@Body() body: WorkerModel) : Promise {\n    const {startWork, endWork, state, date, ...worker} : WorkerModel = body;\n    const _id = await this.workService.createWorker(worker as WorkerModel);\n    const { phoneNumber, ...newWorker} : WorkerModel = body;\n    const answer = await this.workService.addWorkerToWorkDay({ ...newWorker, startWork, endWork, state, _id} as WorkerModel, date);\n    return answer;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('get-employee')\n  async getWorkers() : Promise {\n    return await this.workService.getAllWorkers();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('new-employee-select')\n  async addWorkerToWorkDay(@Body() body: Worker) : Promise {\n    try {\n      const {date, phoneNumber, ...worker}  = body;\n      await this.workService.addWorkerToWorkDay(worker as WorkerModel, date);\n      return true;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerModel.html":{"url":"interfaces/WorkerModel.html","title":"interface - WorkerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/worker.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        endWork\n                                \n                                \n                                        name\n                                \n                                \n                                        phoneNumber\n                                \n                                \n                                            Optional\n                                        startWork\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endWork\n                                    \n                                \n                                \n                                    \n                                        endWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startWork\n                                    \n                                \n                                \n                                    \n                                        startWork:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document, Model } from 'mongoose';\n\nexport interface WorkerModel extends Document {\n  name: string,\n  surname: string,\n  phoneNumber: string,\n  startWork?: string,\n  endWork?: string,\n  state?: number,\n  date?: string,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api.controller.ts\n            \n            controller\n            ApiController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/jwt-auth/jwt-auth.service.ts\n            \n            injectable\n            JwtAuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/jwt-auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/jwt-refresh-auth/jwt-refresh-auth.guard.ts\n            \n            guard\n            JwtRefreshAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts\n            \n            injectable\n            JwtRefreshAuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/auth/jwt-refresh-auth/jwt-refresh-auth.service.ts\n            \n            interface\n            Payload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/local-auth-guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/signin/signin.controller.ts\n            \n            controller\n            SigninController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/signin/signin.service.ts\n            \n            injectable\n            SigninService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/signon/signon.controller.ts\n            \n            controller\n            SignonController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/signon/signon.service.ts\n            \n            injectable\n            SignonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/users/UserModel.ts\n            \n            interface\n            UserModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/work/work-day/work-day.controller.ts\n            \n            controller\n            WorkDayController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/work/work-day/work-day.controller.ts\n            \n            interface\n            WorkDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/work/work-day/work-day.controller.ts\n            \n            interface\n            Worker\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/work/work.service.ts\n            \n            injectable\n            WorkService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/work/worker/worker.controller.ts\n            \n            controller\n            WorkerController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/work/worker/worker.controller.ts\n            \n            interface\n            Worker\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/work-day.model.ts\n            \n            interface\n            WorkDayModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/work-day.model.ts\n            \n            interface\n            Worker\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/worker.model.ts\n            \n            interface\n            WorkerModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/schemas/day-general-data.schema.ts\n            \n            variable\n            DayGeneralData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/sale-day.schema.ts\n            \n            variable\n            SaleDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/work-day.schema.ts\n            \n            variable\n            WorkDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/worker.schema.ts\n            \n            variable\n            WorkerSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.11.11\n        \n            @nestjs/core : ^6.11.11\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^6.4.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^6.11.11\n        \n            mongoose : ^5.9.7\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtRefreshAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SigninModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_JwtAuthModule\n\n\n\ncluster_JwtAuthModule_exports\n\n\n\ncluster_JwtAuthModule_providers\n\n\n\ncluster_JwtRefreshAuthModule\n\n\n\ncluster_JwtRefreshAuthModule_exports\n\n\n\ncluster_JwtRefreshAuthModule_providers\n\n\n\ncluster_SigninModule\n\n\n\ncluster_SigninModule_providers\n\n\n\ncluster_SignonModule\n\n\n\ncluster_SignonModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_WorkModule\n\n\n\ncluster_WorkModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSigninModule\n\nSigninModule\n\nSigninModule -->\n\nAuthModule->SigninModule\n\n\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nAuthModule->ApiModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nApiModule -->\n\nSigninModule->ApiModule\n\n\n\n\n\nSignonModule\n\nSignonModule\n\nApiModule -->\n\nSignonModule->ApiModule\n\n\n\n\n\nWorkModule\n\nWorkModule\n\nApiModule -->\n\nWorkModule->ApiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\nAuthModule -->\n\nJwtAuthModule->AuthModule\n\n\n\n\n\nJwtAuthService \n\nJwtAuthService \n\nJwtAuthService  -->\n\nJwtAuthModule->JwtAuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nJwtAuthModule->JwtStrategy \n\n\n\n\n\nJwtRefreshAuthModule\n\nJwtRefreshAuthModule\n\nAuthModule -->\n\nJwtRefreshAuthModule->AuthModule\n\n\n\nSigninModule -->\n\nJwtRefreshAuthModule->SigninModule\n\n\n\nJwtAuthModule -->\n\nJwtRefreshAuthModule->JwtAuthModule\n\n\n\nJwtStrategy  -->\n\nJwtRefreshAuthModule->JwtStrategy \n\n\n\n\n\nJwtRefreshAuthService \n\nJwtRefreshAuthService \n\nJwtRefreshAuthService  -->\n\nJwtRefreshAuthModule->JwtRefreshAuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nSigninModule -->\n\nUsersModule->SigninModule\n\n\n\nSignonModule -->\n\nUsersModule->SignonModule\n\n\n\nJwtAuthModule -->\n\nUsersModule->JwtAuthModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nJwtAuthService\n\nJwtAuthService\n\nJwtAuthModule -->\n\nJwtAuthService->JwtAuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nJwtAuthModule -->\n\nJwtStrategy->JwtAuthModule\n\n\n\nJwtRefreshAuthModule -->\n\nJwtStrategy->JwtRefreshAuthModule\n\n\n\n\n\nJwtRefreshAuthService\n\nJwtRefreshAuthService\n\nJwtRefreshAuthModule -->\n\nJwtRefreshAuthService->JwtRefreshAuthModule\n\n\n\n\n\nSigninService\n\nSigninService\n\nSigninModule -->\n\nSigninService->SigninModule\n\n\n\n\n\nSignonService\n\nSignonService\n\nSignonModule -->\n\nSignonService->SignonModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nWorkService\n\nWorkService\n\nWorkModule -->\n\nWorkService->WorkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DayGeneralData   (src/.../day-general-data.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            SaleDay   (src/.../sale-day.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            WorkDay   (src/.../work-day.schema.ts)\n                        \n                        \n                            WorkerSchema   (src/.../worker.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/day-general-data.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DayGeneralData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  calendarDay: {\n    type: Date,\n    default: Date.now,\n    required: true,\n    unique: true,\n  },\n  priceForTheCollectedBasket: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  totalCollectedBasketsOfStrawberries: {\n    type: Number,\n    default: 0,\n  },\n  numberOfEmployees: {\n    type: Number,\n    default: 0,\n  },\n  totalRemunerationForEmployees: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  totalSales: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  contractSales: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  privateSale: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  gross: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  netIncome: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/api/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'secretKey',\n  refreshToken: 'refreshToken',\n}\n                        \n                    \n\n\n            \n        \n\n    src/schemas/sale-day.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SaleDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  calendarDay: {\n    type: Date,\n    default: Date.now,\n    required: true,\n    unique: true,\n  },\n  totalSales: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  pricePerKilo: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  netIncomeFromSales: {\n    value: {\n      type: Number,\n      default: 0,\n    },\n    currency: {\n      type: String,\n      default: 'PLN',\n    },\n  },\n  merchant: {\n    name: {\n      type: String,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    }\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  firstName: String,\n  lastName: String,\n  password: String,\n  email: {\n    type: String,\n    unique: true,\n    lowercase: true,\n    trim: true,\n  },\n}, {\n    timestamps: true,\n})\n                        \n                    \n\n\n            \n        \n\n    src/schemas/work-day.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WorkDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     mongoose.Schema\n\n                        \n                    \n                    \n                        \n                            Default value : new mongoose.Schema({\n  date: String,\n  ratio: String,\n  employees: [{\n    name: String,\n    surname: String,\n    startWork: String,\n    endWork: String,\n    state: String,\n    _id: String,\n  }],\n})\n                        \n                    \n\n\n            \n        \n\n    src/schemas/worker.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WorkerSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  surname: {\n    type: String,\n    default: '',\n  },\n  phoneNumber: {\n    type: String,\n    default: '',\n  },\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
